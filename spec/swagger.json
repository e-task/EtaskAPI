{
  "x-generator": "NSwag v11.20.1.0 (NJsonSchema v9.12.0.0 (Newtonsoft.Json v11.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "eTASK Universal BIM API",
    "description": "Access all the data in you real estate portfolio. Use all information, documents, BIM models and processes through the unified eTASK Universal BIM API. The API  offers a simple, fast and secure Access, based on the Open API specification. Write Apps, integrate you data into other systems and digitize you workflow with the help of this API.",
    "termsOfService": "Nutzungsbedingungen",
    "contact": {
      "name": "eTASK Immobilien Software GmbH",
      "email": "api@etask.de"
    },
    "license": {
      "name": "License",
      "url": "https://www.etask.de/wp-content/uploads/etask_agb.pdf"
    },
    "version": "0.0.1"
  },
  "host": "dotnet.etask.de",
  "basePath": "/API",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/Department/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Department_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Department"
              }
            }
          }
        }
      }
    },
    "/api/Department/All": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Department_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Department"
              }
            }
          }
        }
      }
    },
    "/api/Department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Department_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Department/Create": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Department_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Department"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Department/Update": {
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Department_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Building/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Building"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Building_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Building"
              }
            }
          }
        }
      }
    },
    "/api/Building/All": {
      "get": {
        "tags": [
          "Building"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Building_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Building"
              }
            }
          }
        }
      }
    },
    "/api/Building/{id}": {
      "get": {
        "tags": [
          "Building"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Building_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Building"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Building/Create": {
      "post": {
        "tags": [
          "Building"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Building_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Building"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Building"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Building/Update": {
      "put": {
        "tags": [
          "Building"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Building_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/CostCenter/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the specified page.",
        "operationId": "CostCenter_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCenter"
              }
            }
          }
        }
      }
    },
    "/api/CostCenter/All": {
      "get": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Get a list of all items.",
        "operationId": "CostCenter_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCenter"
              }
            }
          }
        }
      }
    },
    "/api/CostCenter/{id}": {
      "get": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "CostCenter_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Posts the specified item.",
        "operationId": "CostCenter_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/CostCenter"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/CostCenter/Update": {
      "put": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "CostCenter_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Floor/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Floor"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Floor_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Floor"
              }
            }
          }
        }
      }
    },
    "/api/Floor/All": {
      "get": {
        "tags": [
          "Floor"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Floor_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Floor"
              }
            }
          }
        }
      }
    },
    "/api/Floor/{id}": {
      "get": {
        "tags": [
          "Floor"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Floor_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Floor"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Floor/Create": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Floor_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Floor"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Floor"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Floor/Update": {
      "put": {
        "tags": [
          "Floor"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Floor_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Person/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Person_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          }
        }
      }
    },
    "/api/Person/All": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Person_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          }
        }
      }
    },
    "/api/Person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Person_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Person/Create": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Person_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Person/Update": {
      "put": {
        "tags": [
          "Person"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Person_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/PersonType/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "PersonType"
        ],
        "summary": "Gets the specified page.",
        "operationId": "PersonType_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonType"
              }
            }
          }
        }
      }
    },
    "/api/PersonType/All": {
      "get": {
        "tags": [
          "PersonType"
        ],
        "summary": "Get a list of all items.",
        "operationId": "PersonType_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonType"
              }
            }
          }
        }
      }
    },
    "/api/PersonType/{id}": {
      "get": {
        "tags": [
          "PersonType"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "PersonType_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/PersonType"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/PersonType/Create": {
      "post": {
        "tags": [
          "PersonType"
        ],
        "summary": "Posts the specified item.",
        "operationId": "PersonType_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/PersonType"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/PersonType"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/PersonType/Update": {
      "put": {
        "tags": [
          "PersonType"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "PersonType_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Room/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Room_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          }
        }
      }
    },
    "/api/Room/All": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Room_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          }
        }
      }
    },
    "/api/Room/{id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Room_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Room/Create": {
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Room_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Room"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Room/Update": {
      "put": {
        "tags": [
          "Room"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Room_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Site/Paged/{page}/{limit}": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Gets the specified page.",
        "operationId": "Site_GetPaged",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "path",
            "required": true,
            "description": "The page.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "path",
            "required": true,
            "description": "The limit on page.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of items specified by offset and limit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Site"
              }
            }
          }
        }
      }
    },
    "/api/Site/All": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get a list of all items.",
        "operationId": "Site_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns a list of all items",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Site"
              }
            }
          }
        }
      }
    },
    "/api/Site/{id}": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Gets the by identifier.",
        "operationId": "Site_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "expand",
            "in": "query",
            "description": "The list of properties to expand in result",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "returns an item specified by given identifier",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "Parameter missing 'id'"
          }
        }
      }
    },
    "/api/Site/Create": {
      "post": {
        "tags": [
          "Site"
        ],
        "summary": "Posts the specified item.",
        "operationId": "Site_Post",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "description": "The item.",
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "creates an item and returns the new item",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "if given item is invalid"
          }
        }
      }
    },
    "/api/Site/Update": {
      "put": {
        "tags": [
          "Site"
        ],
        "summary": "Puts the specified identifier.",
        "operationId": "Site_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "description": "The values.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "updates an specified item by given identifier"
          },
          "404": {
            "description": "Object not found!"
          },
          "400": {
            "description": "if item is not valid"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Dummy": {
      "get": {
        "tags": [
          "Dummy"
        ],
        "summary": "Get all \"dummies\"\n            ",
        "operationId": "Dummy_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "c#",
            "source": "System.Diagnostic.Debug.WriteLine('Hello Dummy');"
          },
          {
            "lang": "javascript",
            "source": "console.log('Hello Dummy');"
          }
        ]
      }
    },
    "/api/Dummy/{id}": {
      "get": {
        "tags": [
          "Dummy"
        ],
        "summary": "Gets a the specified dummy by identifier.\n            ",
        "operationId": "Dummy_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dummy"
        ],
        "summary": "Deletes the specified identifier.\n            ",
        "operationId": "Dummy_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/Create": {
      "post": {
        "tags": [
          "Dummy"
        ],
        "summary": "Creates the new dummy.\n            ",
        "operationId": "Dummy_Post",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "description": "The value.",
            "schema": {
              "type": "string"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/Update": {
      "put": {
        "tags": [
          "Dummy"
        ],
        "summary": "updates a specified dummy by identifier.\n            ",
        "operationId": "Dummy_Put",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The identifier.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "value",
            "in": "body",
            "required": true,
            "description": "The value.",
            "schema": {
              "type": "string"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "Department": {
      "allOf": [
        {
          "$ref": "#/definitions/DepartmentBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "DepartmentBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CompanyAddress",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Departments": {
          "$ref": "#/definitions/Departments"
        },
        "CostCenters": {
          "$ref": "#/definitions/CostCenters"
        },
        "AllocationDepartmentToRooms": {
          "$ref": "#/definitions/AllocationDepartmentToRooms"
        },
        "Persons": {
          "$ref": "#/definitions/Persons"
        },
        "BuildingType": {
          "$ref": "#/definitions/BuildingType"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "ParentDepartment": {
          "$ref": "#/definitions/Department"
        },
        "Person": {
          "$ref": "#/definitions/Person"
        },
        "RegionId": {
          "$ref": "#/definitions/PortfolioLevel3"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColorRgba": {
          "type": "string",
          "maxLength": 8
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        },
        "QuantityOfEmployees": {
          "type": "number",
          "format": "decimal"
        },
        "RgbaForegroundColour": {
          "type": "string",
          "maxLength": 8
        },
        "SearchString": {
          "type": "string",
          "maxLength": 4000
        },
        "ShortDesignation": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "Departments": {
      "type": "object",
      "additionalProperties": false
    },
    "CostCenters": {
      "type": "object",
      "additionalProperties": false
    },
    "AllocationDepartmentToRooms": {
      "type": "object",
      "additionalProperties": false
    },
    "Persons": {
      "type": "object",
      "additionalProperties": false
    },
    "BuildingType": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildingTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BuildingTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "CompanyAddress": {
      "allOf": [
        {
          "$ref": "#/definitions/CompanyAddressBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CompanyAddressBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "ActivationForRegistrationManagement",
        "CompanyName",
        "ContactPersonForSendingMails",
        "Customer",
        "ExportFlag",
        "IsInternalCompany",
        "IxbNo",
        "Lessee",
        "Lessor",
        "Manufacturer",
        "Orderer",
        "Proprietor",
        "ServiceProvider",
        "ShowInEmergencylist",
        "Supplier"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Departments": {
          "$ref": "#/definitions/Departments"
        },
        "AdditionalAddresses": {
          "$ref": "#/definitions/AdditionalAddresses"
        },
        "CompanyEvaluations": {
          "$ref": "#/definitions/CompanyEvaluations"
        },
        "AdditionalCompanyTrades": {
          "$ref": "#/definitions/AdditionalCompanyTrades"
        },
        "UserGroups": {
          "$ref": "#/definitions/UserGroups"
        },
        "Assets": {
          "$ref": "#/definitions/Assets"
        },
        "Responsibilities": {
          "$ref": "#/definitions/Responsibilities"
        },
        "Debitors": {
          "$ref": "#/definitions/Debitors"
        },
        "Creditors": {
          "$ref": "#/definitions/Creditors"
        },
        "ConstructionProjects": {
          "$ref": "#/definitions/ConstructionProjects"
        },
        "Offers": {
          "$ref": "#/definitions/Offers"
        },
        "VisitorLists": {
          "$ref": "#/definitions/VisitorLists"
        },
        "Persons": {
          "$ref": "#/definitions/Persons"
        },
        "ContractsOfCustomer": {
          "$ref": "#/definitions/Contracts"
        },
        "ContractsOfContractor": {
          "$ref": "#/definitions/Contracts"
        },
        "AddressTyp": {
          "type": "integer",
          "format": "int32"
        },
        "CostCenter": {
          "$ref": "#/definitions/CostCenter"
        },
        "Trade": {
          "$ref": "#/definitions/Trade"
        },
        "AccountingSystem": {
          "type": "string",
          "maxLength": 50
        },
        "ActivationForRegistrationManagement": {
          "type": "boolean"
        },
        "AreaCode": {
          "type": "string",
          "maxLength": 10
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Birthday": {
          "type": "string",
          "maxLength": 50
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "CollectedBy": {
          "type": "string",
          "maxLength": 50
        },
        "CollectionDate": {
          "type": "string",
          "format": "date-time"
        },
        "CompanyName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "CompanyName2": {
          "type": "string",
          "maxLength": 50
        },
        "CompanyName3": {
          "type": "string",
          "maxLength": 50
        },
        "CompanyNameOndoorplate": {
          "type": "string",
          "maxLength": 50
        },
        "ContactPerson": {
          "type": "string",
          "maxLength": 50
        },
        "ContactPersonForSendingMails": {
          "type": "boolean"
        },
        "ContactPersonPhoneNo": {
          "type": "string",
          "maxLength": 50
        },
        "ContractorNo": {
          "type": "string",
          "maxLength": 10
        },
        "Country": {
          "type": "string",
          "maxLength": 60
        },
        "CountryDialingCode": {
          "type": "string",
          "maxLength": 10
        },
        "Customer": {
          "type": "boolean"
        },
        "Department": {
          "type": "string",
          "maxLength": 50
        },
        "EMailAddress": {
          "type": "string",
          "maxLength": 50
        },
        "EMailBuinessContact": {
          "type": "string",
          "maxLength": 100
        },
        "EMailPersonalContact": {
          "type": "string",
          "maxLength": 100
        },
        "EMailPrivate": {
          "type": "string",
          "maxLength": 100
        },
        "ExportFlag": {
          "type": "number",
          "format": "decimal"
        },
        "ExternalId": {
          "type": "integer",
          "format": "int32"
        },
        "FaxNo": {
          "type": "string",
          "maxLength": 50
        },
        "FaxNoOfficial": {
          "type": "string",
          "maxLength": 50
        },
        "FaxNoPrivate": {
          "type": "string",
          "maxLength": 50
        },
        "FirstName": {
          "type": "string",
          "maxLength": 50
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Function": {
          "type": "string",
          "maxLength": 50
        },
        "Gender": {
          "type": "string",
          "maxLength": 5
        },
        "Group": {
          "type": "string",
          "maxLength": 50
        },
        "GroupCode": {
          "type": "string",
          "maxLength": 50
        },
        "InformationText": {
          "type": "string",
          "maxLength": 250
        },
        "IsInternalCompany": {
          "type": "boolean"
        },
        "IxbNo": {
          "type": "boolean"
        },
        "LastContactmeeting": {
          "type": "string",
          "maxLength": 50
        },
        "LastName": {
          "type": "string",
          "maxLength": 50
        },
        "Lessee": {
          "type": "boolean"
        },
        "Lessor": {
          "type": "boolean"
        },
        "LetterSalutation": {
          "type": "string",
          "maxLength": 50
        },
        "MailingAddress": {
          "type": "string",
          "maxLength": 400
        },
        "Manufacturer": {
          "type": "boolean"
        },
        "MobilePhoneNo": {
          "type": "string",
          "maxLength": 50
        },
        "NextContactmeeting": {
          "type": "string",
          "maxLength": 50
        },
        "Orderer": {
          "type": "boolean"
        },
        "OurCustomerNo": {
          "type": "string",
          "maxLength": 50
        },
        "PartnerNo": {
          "type": "string",
          "maxLength": 50
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        },
        "PhoneMobile": {
          "type": "string",
          "maxLength": 50
        },
        "PhoneNo": {
          "type": "string",
          "maxLength": 50
        },
        "PhoneNoOfficial": {
          "type": "string",
          "maxLength": 50
        },
        "PhoneNoPrivate": {
          "type": "string",
          "maxLength": 50
        },
        "PhoneNumberCentral": {
          "type": "string",
          "maxLength": 50
        },
        "PoBox": {
          "type": "string",
          "maxLength": 15
        },
        "PostalCodeOfPoBox": {
          "type": "string",
          "maxLength": 12
        },
        "Proprietor": {
          "type": "boolean"
        },
        "Remarks": {
          "type": "string",
          "maxLength": 255
        },
        "RemarksAdditional": {
          "type": "string",
          "maxLength": 255
        },
        "SalesTaxId": {
          "type": "string",
          "maxLength": 12
        },
        "ServiceProvider": {
          "type": "boolean"
        },
        "ShowInEmergencylist": {
          "type": "boolean"
        },
        "Status": {
          "type": "string",
          "maxLength": 255
        },
        "StreetAddress": {
          "type": "string",
          "maxLength": 50
        },
        "Superior": {
          "type": "string",
          "maxLength": 50
        },
        "Supplier": {
          "type": "boolean"
        },
        "Title": {
          "type": "string",
          "maxLength": 30
        },
        "TitleForm": {
          "type": "string",
          "maxLength": 50
        },
        "Town": {
          "type": "string",
          "maxLength": 50
        },
        "UserNameFmPortal": {
          "type": "string",
          "maxLength": 50
        },
        "Website": {
          "type": "string",
          "maxLength": 200
        },
        "WebSitePrivate": {
          "type": "string",
          "maxLength": 100
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 12
        }
      }
    },
    "AdditionalAddresses": {
      "type": "object",
      "additionalProperties": false
    },
    "CompanyEvaluations": {
      "type": "object",
      "additionalProperties": false
    },
    "AdditionalCompanyTrades": {
      "type": "object",
      "additionalProperties": false
    },
    "UserGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "Assets": {
      "type": "object",
      "additionalProperties": false
    },
    "Responsibilities": {
      "type": "object",
      "additionalProperties": false
    },
    "Debitors": {
      "type": "object",
      "additionalProperties": false
    },
    "Creditors": {
      "type": "object",
      "additionalProperties": false
    },
    "ConstructionProjects": {
      "type": "object",
      "additionalProperties": false
    },
    "Offers": {
      "type": "object",
      "additionalProperties": false
    },
    "VisitorLists": {
      "type": "object",
      "additionalProperties": false
    },
    "Contracts": {
      "type": "object",
      "additionalProperties": false
    },
    "CostCenter": {
      "allOf": [
        {
          "$ref": "#/definitions/CostCenterBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CostCenterBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CompanyAddress",
        "Billable",
        "CanBePostedTo",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "CostCenterManagers": {
          "$ref": "#/definitions/CostCenterManagers"
        },
        "RoomCostCenters": {
          "$ref": "#/definitions/RoomCostCenters"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "CostCenterType": {
          "$ref": "#/definitions/CostCenterType"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Billable": {
          "type": "boolean"
        },
        "CanBePostedTo": {
          "type": "boolean"
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "CompanyCode": {
          "type": "string",
          "maxLength": 10
        },
        "ExternalCode": {
          "type": "string",
          "readOnly": true,
          "maxLength": 30
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Hierarchy": {
          "type": "string",
          "maxLength": 30
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        },
        "PersonInChargeForCostcenter": {
          "type": "string",
          "maxLength": 50
        },
        "PersonResponsibleForCostcenter": {
          "type": "string",
          "maxLength": 50
        },
        "ValidFrom": {
          "type": "string",
          "format": "date-time"
        },
        "ValidTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Buildings": {
      "type": "object",
      "additionalProperties": false
    },
    "CostCenterManagers": {
      "type": "object",
      "additionalProperties": false
    },
    "RoomCostCenters": {
      "type": "object",
      "additionalProperties": false
    },
    "CostCenterType": {
      "allOf": [
        {
          "$ref": "#/definitions/CostCenterTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CostCenterTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CostCenterBuildings": {
          "$ref": "#/definitions/CostCenterBuildings"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "CostCenterBuildings": {
      "type": "object",
      "additionalProperties": false
    },
    "Trade": {
      "allOf": [
        {
          "$ref": "#/definitions/TradeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TradeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyAddresses": {
          "$ref": "#/definitions/CompanyAddresses"
        },
        "TradeGroups": {
          "$ref": "#/definitions/TradeGroups"
        },
        "AssetCategory": {
          "$ref": "#/definitions/AssetCategory"
        },
        "Code": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        }
      }
    },
    "CompanyAddresses": {
      "type": "object",
      "additionalProperties": false
    },
    "TradeGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "AssetCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetCategoryBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "AssetCategoryBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Trades": {
          "$ref": "#/definitions/Trades"
        },
        "Layers": {
          "$ref": "#/definitions/Layers"
        },
        "GefmaCostGroups": {
          "$ref": "#/definitions/GefmaCostGroups"
        },
        "ObjectTypes": {
          "$ref": "#/definitions/ObjectTypes"
        },
        "Tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "Measures": {
          "$ref": "#/definitions/Measures"
        },
        "CadStatus": {
          "$ref": "#/definitions/CadState"
        },
        "Code": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        }
      }
    },
    "Trades": {
      "type": "object",
      "additionalProperties": false
    },
    "Layers": {
      "type": "object",
      "additionalProperties": false
    },
    "GefmaCostGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "ObjectTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "Tasks": {
      "type": "object",
      "additionalProperties": false
    },
    "Measures": {
      "type": "object",
      "additionalProperties": false
    },
    "CadState": {
      "allOf": [
        {
          "$ref": "#/definitions/CadStateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CadStateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 15
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Person": {
      "allOf": [
        {
          "$ref": "#/definitions/PersonBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PersonBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Salutation",
        "EMail",
        "GivenName",
        "Inactive",
        "IsAdmin",
        "PersonnelNumberPrimary",
        "SurName"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "ParkingSpaces": {
          "$ref": "#/definitions/ParkingSpaces"
        },
        "Assets": {
          "$ref": "#/definitions/Assets"
        },
        "CardAssignments": {
          "$ref": "#/definitions/CardAssignments"
        },
        "AllocationAccessRightToPersons": {
          "$ref": "#/definitions/AllocationAccessRightToPersons"
        },
        "Communications": {
          "$ref": "#/definitions/Communications"
        },
        "PersonInRooms": {
          "$ref": "#/definitions/PersonInRooms"
        },
        "Keys": {
          "$ref": "#/definitions/Keys"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "CostCenterPrimary": {
          "$ref": "#/definitions/CostCenter"
        },
        "CostCenterSecondary": {
          "$ref": "#/definitions/CostCenter"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "EmployeeFunction": {
          "$ref": "#/definitions/EmployeeFunction"
        },
        "PersonType": {
          "$ref": "#/definitions/PersonType"
        },
        "PersonWorkflowTicket": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowTicket"
            }
          ]
        },
        "Salutation": {
          "$ref": "#/definitions/Salutation"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "SourceOfPersonData": {
          "$ref": "#/definitions/DataSourcesOfPersonData"
        },
        "Superior": {
          "$ref": "#/definitions/Person"
        },
        "CodeOfDepartment": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "DateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "DateOfEmployment": {
          "type": "string",
          "format": "date-time"
        },
        "DepartmentLongName": {
          "type": "string",
          "maxLength": 150
        },
        "DepartmentName": {
          "type": "string",
          "maxLength": 40
        },
        "DoorLabelText": {
          "type": "string",
          "maxLength": 255
        },
        "EMail": {
          "type": "string",
          "maxLength": 96,
          "minLength": 1
        },
        "ExitDate": {
          "type": "string",
          "format": "date-time"
        },
        "FaxNumber": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "GivenName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Inactive": {
          "type": "boolean"
        },
        "IsAdmin": {
          "type": "boolean",
          "readOnly": true
        },
        "LdapImportIdentifier": {
          "type": "string",
          "readOnly": true,
          "maxLength": 256
        },
        "Location": {
          "type": "string",
          "maxLength": 150
        },
        "Location1": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "Locked": {
          "type": "boolean"
        },
        "LoginFailed": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "LoginName": {
          "type": "string",
          "maxLength": 50
        },
        "MobilePhoneNo": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "NumerOfFailedLoginAttempts": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "Password": {
          "type": "string",
          "maxLength": 255
        },
        "PasswordExpiresOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "PasswordNeverExpires": {
          "type": "boolean"
        },
        "PersonnelNumberPrimary": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "PersonnelNumberSecondary": {
          "type": "string",
          "maxLength": 50
        },
        "PhoneNumberOffice": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "PhoneNumberPrivate": {
          "type": "string",
          "maxLength": 20
        },
        "Pseudonym": {
          "type": "string",
          "maxLength": 100
        },
        "Remark": {
          "type": "string",
          "maxLength": 255
        },
        "SocialSecurityNumber": {
          "type": "string",
          "maxLength": 50
        },
        "StreetAddress": {
          "type": "string",
          "maxLength": 150
        },
        "SurName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Title": {
          "type": "string",
          "maxLength": 50
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "ParkingSpaces": {
      "type": "object",
      "additionalProperties": false
    },
    "CardAssignments": {
      "type": "object",
      "additionalProperties": false
    },
    "AllocationAccessRightToPersons": {
      "type": "object",
      "additionalProperties": false
    },
    "Communications": {
      "type": "object",
      "additionalProperties": false
    },
    "PersonInRooms": {
      "type": "object",
      "additionalProperties": false
    },
    "Keys": {
      "type": "object",
      "additionalProperties": false
    },
    "EmployeeFunction": {
      "allOf": [
        {
          "$ref": "#/definitions/EmployeeFunctionBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "EmployeeFunctionBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "FloorSpaceRequired": {
          "type": "number",
          "format": "decimal"
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PersonType": {
      "allOf": [
        {
          "$ref": "#/definitions/PersonTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PersonTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkflowTicket": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowTicketBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "WorkflowTicketBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "ServiceStep",
        "Workflow",
        "WorkflowRole",
        "TicketCreateDate",
        "TicketName",
        "TicketNo",
        "WorkflowStartDate"
      ],
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "minLength": 1
        },
        "Orders": {
          "$ref": "#/definitions/Orders"
        },
        "WorkflowTicketHistories": {
          "$ref": "#/definitions/WorkflowTicketHistories"
        },
        "IncomingInvoices": {
          "$ref": "#/definitions/IncomingInvoices"
        },
        "ServiceTickets": {
          "$ref": "#/definitions/ServiceTickets"
        },
        "Moves": {
          "$ref": "#/definitions/Moves"
        },
        "ServiceStep": {
          "$ref": "#/definitions/ServiceStep"
        },
        "Workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "WorkflowRole": {
          "$ref": "#/definitions/WorkflowRole"
        },
        "PlannedFinishOfworkflow": {
          "type": "string",
          "format": "date-time"
        },
        "TicketCreateDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "TicketName": {
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "TicketNo": {
          "type": "string",
          "maxLength": 18,
          "minLength": 1
        },
        "WorkflowCompletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "WorkflowStartDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "WorkflowTable": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "Orders": {
      "type": "object",
      "additionalProperties": false
    },
    "WorkflowTicketHistories": {
      "type": "object",
      "additionalProperties": false
    },
    "IncomingInvoices": {
      "type": "object",
      "additionalProperties": false
    },
    "ServiceTickets": {
      "type": "object",
      "additionalProperties": false
    },
    "Moves": {
      "type": "object",
      "additionalProperties": false
    },
    "ServiceStep": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceStepBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ServiceStepBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Workflow",
        "Active",
        "ArchivedInServicelist",
        "Code",
        "DisplayName",
        "Name",
        "PossibleStartServicestep",
        "SystemServiceStep",
        "Workflow_uid",
        "Workflowstep_uid"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "EscalationLevels": {
          "$ref": "#/definitions/EscalationLevels"
        },
        "AuthorizationInWorkflowsteps": {
          "$ref": "#/definitions/AuthorizationInWorkflowsteps"
        },
        "FollowUpServiceSteps": {
          "$ref": "#/definitions/FollowUpServiceSteps"
        },
        "CompulsoryFieldsForWorkflowSteps": {
          "$ref": "#/definitions/CompulsoryFieldsForWorkflowSteps"
        },
        "Workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "WorkflowStepType": {
          "$ref": "#/definitions/WorkflowStepType"
        },
        "Active": {
          "type": "boolean"
        },
        "ArchivedInServicelist": {
          "type": "boolean"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "DisplayName": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "DurationBinding": {
          "type": "boolean"
        },
        "Durationh": {
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "PossibleStartServicestep": {
          "type": "boolean"
        },
        "SystemServiceStep": {
          "type": "boolean",
          "readOnly": true
        },
        "Workflow_uid": {
          "type": "string",
          "readOnly": true,
          "format": "guid",
          "minLength": 1
        },
        "Workflowstep_uid": {
          "type": "string",
          "readOnly": true,
          "format": "guid",
          "minLength": 1
        }
      }
    },
    "EscalationLevels": {
      "type": "object",
      "additionalProperties": false
    },
    "AuthorizationInWorkflowsteps": {
      "type": "object",
      "additionalProperties": false
    },
    "FollowUpServiceSteps": {
      "type": "object",
      "additionalProperties": false
    },
    "CompulsoryFieldsForWorkflowSteps": {
      "type": "object",
      "additionalProperties": false
    },
    "Workflow": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "WorkflowBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "UserGroup",
        "Active",
        "ApertureWorkflow",
        "Code",
        "Version",
        "WorkflowUid"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Workflows": {
          "$ref": "#/definitions/Workflows"
        },
        "WorkflowRoles": {
          "$ref": "#/definitions/WorkflowRoles"
        },
        "ServiceSteps": {
          "$ref": "#/definitions/ServiceSteps"
        },
        "Entity": {
          "$ref": "#/definitions/EtaskEntity"
        },
        "MainWorkflow": {
          "$ref": "#/definitions/Workflow"
        },
        "ServiceStep": {
          "$ref": "#/definitions/ServiceStep"
        },
        "UserGroup": {
          "$ref": "#/definitions/UserGroup"
        },
        "Active": {
          "type": "boolean"
        },
        "ApertureWorkflow": {
          "type": "boolean",
          "readOnly": true
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50,
          "minLength": 1
        },
        "ServiceName": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "Version": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "WorkflowUid": {
          "type": "string",
          "readOnly": true,
          "format": "guid",
          "minLength": 1
        }
      }
    },
    "Workflows": {
      "type": "object",
      "additionalProperties": false
    },
    "WorkflowRoles": {
      "type": "object",
      "additionalProperties": false
    },
    "ServiceSteps": {
      "type": "object",
      "additionalProperties": false
    },
    "EtaskEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/EtaskEntityBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "EtaskEntityBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CanBeInventoried",
        "Name",
        "ObjectExplorer",
        "Obsolete",
        "OrderOfDataUpdate",
        "TranslationMissing",
        "Type",
        "UpdateSettings"
      ],
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid",
          "minLength": 1
        },
        "WebformSections": {
          "$ref": "#/definitions/WebformSections"
        },
        "Namespace": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Application"
            }
          ]
        },
        "ParentEntity": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/EtaskEntity"
            }
          ]
        },
        "CanBeInventoried": {
          "type": "boolean",
          "readOnly": true
        },
        "Configuration": {
          "type": "string",
          "readOnly": true
        },
        "CshKeyOftable": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "CshKeyOfwebform": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "Description": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50,
          "minLength": 1
        },
        "ObjectExplorer": {
          "type": "boolean",
          "readOnly": true
        },
        "Obsolete": {
          "type": "boolean",
          "readOnly": true
        },
        "OrderOfDataUpdate": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "SystemName": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "TranslationMissing": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "maxLength": 10,
          "minLength": 1
        },
        "UpdateSettings": {
          "type": "integer"
        },
        "XmlConfigurationOfpage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WebformSections": {
      "type": "object",
      "additionalProperties": false
    },
    "Application": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ApplicationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "ApplicationName",
        "Code",
        "Obsolete"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "EtaskEntities": {
          "$ref": "#/definitions/EtaskEntities"
        },
        "ApplicationName": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50,
          "minLength": 1
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 4,
          "minLength": 1
        },
        "Description": {
          "type": "string",
          "readOnly": true,
          "maxLength": 1000
        },
        "Obsolete": {
          "type": "boolean",
          "readOnly": true
        },
        "SqlFolder": {
          "type": "string",
          "maxLength": 255
        },
        "SystemName": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        }
      }
    },
    "EtaskEntities": {
      "type": "object",
      "additionalProperties": false
    },
    "UserGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/UserGroupBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "UserGroupBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "AdministratorGroup",
        "AutomaticGroup",
        "Code",
        "CreationDate",
        "GroupMailReceptionactive",
        "Name",
        "ServiceGroup",
        "StandardGroup"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "UsersInGroups": {
          "$ref": "#/definitions/UsersInGroups"
        },
        "AccessRightAssetTradeGroups": {
          "$ref": "#/definitions/AccessRightAssetTradeGroups"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "UserGroupType": {
          "$ref": "#/definitions/UserGroupType"
        },
        "AdministratorGroup": {
          "type": "boolean"
        },
        "AutomaticGroup": {
          "type": "boolean"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "CreationDate": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "GroupEMailBox": {
          "type": "string",
          "maxLength": 100
        },
        "GroupMailReceptionactive": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "ServiceGroup": {
          "type": "boolean"
        },
        "StandardGroup": {
          "type": "boolean"
        }
      }
    },
    "UsersInGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "AccessRightAssetTradeGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "UserGroupType": {
      "allOf": [
        {
          "$ref": "#/definitions/UserGroupTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "UserGroupTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "UserGroups": {
          "$ref": "#/definitions/UserGroups"
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "WorkflowStepType": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowStepTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "WorkflowStepTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "WorkflowRole": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowRoleBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "WorkflowRoleBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Workflow",
        "Active",
        "RoleName",
        "StandardRole",
        "SystemName"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CastingWorkflowRoles": {
          "$ref": "#/definitions/CastingWorkflowRoles"
        },
        "AuthorizationInWorkflowsteps": {
          "$ref": "#/definitions/AuthorizationInWorkflowsteps"
        },
        "Workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "Active": {
          "type": "boolean"
        },
        "RoleName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "StandardRole": {
          "type": "boolean"
        },
        "StarRole": {
          "type": "boolean"
        },
        "SystemName": {
          "type": "boolean"
        }
      }
    },
    "CastingWorkflowRoles": {
      "type": "object",
      "additionalProperties": false
    },
    "Salutation": {
      "allOf": [
        {
          "$ref": "#/definitions/SalutationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SalutationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "FormOfAddress"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "FormOfAddress": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Site": {
      "allOf": [
        {
          "$ref": "#/definitions/SiteBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SiteBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Country",
        "City",
        "Code",
        "Name",
        "Street",
        "ZipCode"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "BuildingGroups": {
          "$ref": "#/definitions/BuildingGroups"
        },
        "ParkingSpaces": {
          "$ref": "#/definitions/ParkingSpaces"
        },
        "LocationAssessments": {
          "$ref": "#/definitions/LocationAssessments"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "HierarchicalLevel": {
          "$ref": "#/definitions/PortfolioLevel3"
        },
        "ManagerCompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "ManagerContactPerson": {
          "$ref": "#/definitions/Person"
        },
        "OwnerCompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "OwnerContactPerson": {
          "$ref": "#/definitions/Person"
        },
        "PortfolioCategory": {
          "$ref": "#/definitions/PortfolioCategory"
        },
        "PortfolioGroup": {
          "$ref": "#/definitions/PortfolioGroup"
        },
        "PortfolioType": {
          "$ref": "#/definitions/PortfolioType"
        },
        "CadastralRegisterNo": {
          "type": "string",
          "maxLength": 5
        },
        "CadOid": {
          "type": "string",
          "maxLength": 18
        },
        "City": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Code": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "ContactPerson": {
          "type": "string",
          "maxLength": 50
        },
        "CostCenter": {
          "type": "string",
          "maxLength": 50
        },
        "DoNotCalculateOperatingCosts": {
          "type": "boolean"
        },
        "Email": {
          "type": "string",
          "maxLength": 50
        },
        "FloorSpaceRatio": {
          "type": "number",
          "format": "decimal"
        },
        "IfcGlobalId": {
          "type": "string",
          "maxLength": 22
        },
        "Latitude": {
          "type": "string",
          "maxLength": 50
        },
        "Longitude": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Parcel": {
          "type": "string",
          "maxLength": 50
        },
        "Phone1": {
          "type": "string",
          "maxLength": 25
        },
        "Phone2": {
          "type": "string",
          "maxLength": 25
        },
        "ProfitCenter": {
          "type": "string",
          "maxLength": 50
        },
        "Remark": {
          "type": "string",
          "maxLength": 1000
        },
        "SiteCoverageIndex": {
          "type": "number",
          "format": "decimal"
        },
        "Street": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "TimeZone": {
          "type": "string",
          "maxLength": 50
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        }
      }
    },
    "BuildingGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "LocationAssessments": {
      "type": "object",
      "additionalProperties": false
    },
    "Country": {
      "allOf": [
        {
          "$ref": "#/definitions/CountryBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CountryBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "IsoCode",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "IsoCode": {
          "type": "string",
          "maxLength": 2,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "PortfolioLevel3": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioLevel3Base"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioLevel3Base": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Sites": {
          "$ref": "#/definitions/Sites"
        },
        "HierarchicalLevel": {
          "$ref": "#/definitions/PortfolioLevel2"
        },
        "Code": {
          "type": "string",
          "maxLength": 3,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Sites": {
      "type": "object",
      "additionalProperties": false
    },
    "PortfolioLevel2": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioLevel2Base"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioLevel2Base": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "PortfolioLevel3s": {
          "$ref": "#/definitions/PortfolioLevel3s"
        },
        "HierarchicalLevel1": {
          "$ref": "#/definitions/PortfolioLevel1"
        },
        "Code": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "PortfolioLevel3s": {
      "type": "object",
      "additionalProperties": false
    },
    "PortfolioLevel1": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioLevel1Base"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioLevel1Base": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "PortfolioLevel2s": {
          "$ref": "#/definitions/PortfolioLevel2s"
        },
        "Country": {
          "$ref": "#/definitions/Country"
        },
        "Code": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "PortfolioLevel2s": {
      "type": "object",
      "additionalProperties": false
    },
    "PortfolioCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioCategoryBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioCategoryBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Sites": {
          "$ref": "#/definitions/Sites"
        },
        "PortfolioTypes": {
          "$ref": "#/definitions/PortfolioTypes"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "PortfolioTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "PortfolioGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioGroupBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioGroupBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name",
        "TerminalValueFactormultiplier"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Sites": {
          "$ref": "#/definitions/Sites"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "TerminalValueFactormultiplier": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PortfolioType": {
      "allOf": [
        {
          "$ref": "#/definitions/PortfolioTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PortfolioTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "PortfolioCategory",
        "Code",
        "DiscountRate",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Sites": {
          "$ref": "#/definitions/Sites"
        },
        "PortfolioCategory": {
          "$ref": "#/definitions/PortfolioCategory"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "DiscountRate": {
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "DataSourcesOfPersonData": {
      "allOf": [
        {
          "$ref": "#/definitions/DataSourcesOfPersonDataBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "DataSourcesOfPersonDataBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "SourceName"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "SourceName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Building": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildingBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BuildingBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CostCenter",
        "Site",
        "AirConditioning",
        "BillingOnFlatfeeBasis",
        "ChemicalWasteWater",
        "City",
        "ColdWaterSupply",
        "DistilledWater",
        "ExternalHeatingExpensesSettlement",
        "FireDetectionSystem",
        "FireExtinguishingTechnology",
        "GeneralWasteWater",
        "HotWaterSupply",
        "InDepthSurvey",
        "IntrusionDetectionSystem",
        "LightningProtection",
        "Name",
        "Number",
        "OutgoingAir",
        "PressurizedAir",
        "ProcessCoolingWater",
        "ProtectionOfHistoricalmonuments",
        "Rentable",
        "SprinklerSystem",
        "Street",
        "StreetNumber",
        "TechnicalExhaustAir",
        "Vacuum",
        "Ventilation",
        "WastewaterDisposal",
        "ZipCode"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Floors": {
          "$ref": "#/definitions/Floors"
        },
        "BuildingAssessmentFigures": {
          "$ref": "#/definitions/BuildingAssessmentFigures"
        },
        "CostCenterBuildings": {
          "$ref": "#/definitions/CostCenterBuildings"
        },
        "BuildingParts": {
          "$ref": "#/definitions/BuildingParts"
        },
        "KpiValues": {
          "$ref": "#/definitions/KpiValues"
        },
        "InvoiceAllocationPerBuildings": {
          "$ref": "#/definitions/InvoiceAllocationPerBuildings"
        },
        "AccountingUnit": {
          "$ref": "#/definitions/AccountingUnit"
        },
        "ActivityType": {
          "$ref": "#/definitions/SpaceServiceType"
        },
        "BuildingGroup": {
          "$ref": "#/definitions/BuildingGroup"
        },
        "ConstructionType": {
          "$ref": "#/definitions/ConstructionType"
        },
        "CostCenter": {
          "$ref": "#/definitions/CostCenter"
        },
        "DegreeDayNumberWeatherStation": {
          "$ref": "#/definitions/DegreeDayNumberWeatherStation"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "Function": {
          "$ref": "#/definitions/BuildingFunction"
        },
        "LifeCyclephase": {
          "type": "integer",
          "format": "int32"
        },
        "LocationPolicy": {
          "$ref": "#/definitions/LocationPolicy"
        },
        "MaintenanceContractType": {
          "$ref": "#/definitions/MaintenanceContractType"
        },
        "Manager": {
          "$ref": "#/definitions/Person"
        },
        "OpcPerLocationContingencyRisk": {
          "$ref": "#/definitions/OperationalCostsPerlocation"
        },
        "OperationalCostsPerlocationManagement": {
          "$ref": "#/definitions/OperationalCostsPerlocation"
        },
        "OperationalSpace": {
          "$ref": "#/definitions/OperationalSpace"
        },
        "OwnerAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "Property": {
          "$ref": "#/definitions/Property"
        },
        "PropertyType": {
          "$ref": "#/definitions/PropertyType"
        },
        "ResponsiblePerson": {
          "$ref": "#/definitions/Person"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "Type": {
          "$ref": "#/definitions/BuildingType"
        },
        "AdditionalUsableArea": {
          "type": "number",
          "format": "decimal"
        },
        "AirConditioning": {
          "type": "boolean"
        },
        "AmountOfFloors": {
          "type": "number",
          "format": "decimal"
        },
        "BillingOnFlatfeeBasis": {
          "type": "boolean"
        },
        "BuildingDescriptionForRentComparisonReport": {
          "type": "string",
          "maxLength": 8000
        },
        "CadOid": {
          "type": "string",
          "readOnly": true,
          "maxLength": 18
        },
        "Cellar": {
          "type": "string",
          "maxLength": 20
        },
        "ChemicalWasteWater": {
          "type": "boolean"
        },
        "City": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "ColdWaterSupply": {
          "type": "boolean"
        },
        "ConstructedArea": {
          "type": "number",
          "format": "decimal"
        },
        "ContractuallyAgreedOutput": {
          "type": "string",
          "maxLength": 10
        },
        "CostCenterIpo": {
          "type": "string",
          "maxLength": 50
        },
        "Currenta": {
          "type": "string",
          "maxLength": 15
        },
        "DefaultRiskAsaPercentageOfBasicRent": {
          "type": "number",
          "format": "decimal"
        },
        "DistilledWater": {
          "type": "boolean"
        },
        "EMailOfResponsiblePerson": {
          "type": "string",
          "maxLength": 70
        },
        "ExternalHeatingExpensesSettlement": {
          "type": "boolean"
        },
        "FinancialBookingCode": {
          "type": "string",
          "maxLength": 50
        },
        "FireDetectionSystem": {
          "type": "boolean"
        },
        "FireExtinguishingTechnology": {
          "type": "boolean"
        },
        "FunctionalArea": {
          "type": "number",
          "format": "decimal"
        },
        "GeneralWasteWater": {
          "type": "boolean"
        },
        "HeatingLimitTemperature": {
          "type": "number",
          "format": "decimal"
        },
        "HeatingMedium": {
          "type": "string",
          "maxLength": 30
        },
        "HeatingPeriodFrom": {
          "type": "string",
          "maxLength": 5
        },
        "HeatingPeriodTo": {
          "type": "string",
          "maxLength": 5
        },
        "Height": {
          "type": "number",
          "format": "decimal"
        },
        "HotWaterSupply": {
          "type": "boolean"
        },
        "IfcGlobalId": {
          "type": "string",
          "readOnly": true,
          "maxLength": 22
        },
        "InDepthSurvey": {
          "type": "boolean"
        },
        "Infrastructure": {
          "type": "string",
          "maxLength": 255
        },
        "InsideTemperaturec": {
          "type": "number",
          "format": "decimal"
        },
        "InstalledCapacitykw": {
          "type": "string",
          "maxLength": 10
        },
        "InsulationMaterial": {
          "type": "string",
          "maxLength": 30
        },
        "IntrusionDetectionSystem": {
          "type": "boolean"
        },
        "Latitude": {
          "type": "number",
          "format": "decimal"
        },
        "Length": {
          "type": "number",
          "format": "decimal"
        },
        "LightningProtection": {
          "type": "boolean"
        },
        "Longitude": {
          "type": "number",
          "format": "decimal"
        },
        "MainUsableAream": {
          "type": "number",
          "format": "decimal"
        },
        "MaterialHeatingPipes": {
          "type": "string",
          "maxLength": 20
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "NavvisCode": {
          "type": "string",
          "maxLength": 50
        },
        "NetAreaTarget": {
          "type": "number",
          "format": "decimal"
        },
        "NetVolumem": {
          "type": "number",
          "format": "decimal"
        },
        "Number": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "NumberOfConnections": {
          "type": "number",
          "format": "decimal"
        },
        "NumberOfFreightelevators": {
          "type": "number",
          "format": "decimal"
        },
        "NumberOfHeatingcircuits": {
          "type": "number",
          "format": "decimal"
        },
        "NumberOfHouseconnections": {
          "type": "number",
          "format": "decimal"
        },
        "NumberOfPassengerlifts": {
          "type": "number",
          "format": "decimal"
        },
        "NumberOfTransformerstations": {
          "type": "number",
          "format": "decimal"
        },
        "ObjectOwnerName": {
          "type": "string",
          "maxLength": 50
        },
        "OutgoingAir": {
          "type": "boolean"
        },
        "PercentageOfOpcAdministrationFee": {
          "type": "number",
          "format": "decimal"
        },
        "PlannedOutline": {
          "type": "string",
          "format": "date-time"
        },
        "PressurizedAir": {
          "type": "boolean"
        },
        "ProcessCoolingWater": {
          "type": "boolean"
        },
        "ProtectionOfHistoricalmonuments": {
          "type": "boolean"
        },
        "Provisioning": {
          "type": "string",
          "maxLength": 8
        },
        "RainwaterConnections": {
          "type": "number",
          "format": "decimal"
        },
        "Remark": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkElectro": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkHeating": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkMedia": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkProtection": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkRoof": {
          "type": "string",
          "maxLength": 500
        },
        "RemarkWater": {
          "type": "string",
          "maxLength": 500
        },
        "Rentable": {
          "type": "boolean"
        },
        "RentableUntil": {
          "type": "string",
          "format": "date-time"
        },
        "RentalGuaranteeForrentalagreementno": {
          "type": "string",
          "maxLength": 50
        },
        "RentalGuaranteePriceperm": {
          "type": "number",
          "format": "decimal"
        },
        "RoofCladding": {
          "type": "string",
          "maxLength": 50
        },
        "RoofStructure": {
          "type": "string",
          "maxLength": 50
        },
        "SprinklerSystem": {
          "type": "boolean"
        },
        "Street": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "StreetNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "TargetGrossAreaTarget": {
          "type": "number",
          "format": "decimal"
        },
        "TargetGrossVolume": {
          "type": "number",
          "format": "decimal"
        },
        "TechnicalExhaustAir": {
          "type": "boolean"
        },
        "TelephoneResponsibleFortheobject": {
          "type": "string",
          "maxLength": 50
        },
        "TemperatureSpread": {
          "type": "string",
          "maxLength": 7
        },
        "TrafficArea": {
          "type": "number",
          "format": "decimal"
        },
        "TypeOfHeatdetection": {
          "type": "string",
          "maxLength": 9
        },
        "TypeOfUse": {
          "type": "string",
          "maxLength": 40
        },
        "UsefulArea": {
          "type": "number",
          "format": "decimal"
        },
        "Vacuum": {
          "type": "boolean"
        },
        "Ventilation": {
          "type": "boolean"
        },
        "WastewaterDisposal": {
          "type": "boolean"
        },
        "Width": {
          "type": "number",
          "format": "decimal"
        },
        "YearOfConstruction": {
          "type": "string",
          "maxLength": 50
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        }
      }
    },
    "Floors": {
      "type": "object",
      "additionalProperties": false
    },
    "BuildingAssessmentFigures": {
      "type": "object",
      "additionalProperties": false
    },
    "BuildingParts": {
      "type": "object",
      "additionalProperties": false
    },
    "KpiValues": {
      "type": "object",
      "additionalProperties": false
    },
    "InvoiceAllocationPerBuildings": {
      "type": "object",
      "additionalProperties": false
    },
    "AccountingUnit": {
      "allOf": [
        {
          "$ref": "#/definitions/AccountingUnitBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "AccountingUnitBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "Units": {
          "$ref": "#/definitions/Units"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "CompanyCodeSap": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Units": {
      "type": "object",
      "additionalProperties": false
    },
    "SpaceServiceType": {
      "allOf": [
        {
          "$ref": "#/definitions/SpaceServiceTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SpaceServiceTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Hatching": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50
        },
        "RentPrice": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "BuildingGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildingGroupBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BuildingGroupBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Site",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "ConstructionType": {
      "allOf": [
        {
          "$ref": "#/definitions/ConstructionTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ConstructionTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "DegreeDayNumberWeatherStation": {
      "allOf": [
        {
          "$ref": "#/definitions/DegreeDayNumberWeatherStationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "DegreeDayNumberWeatherStationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "NameStation",
        "NumberStation",
        "StartClimateSeries",
        "StationCode"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "DegreeDayNumbers": {
          "$ref": "#/definitions/DegreeDayNumbers"
        },
        "IcaoIdentifier": {
          "type": "string",
          "maxLength": 10
        },
        "NameStation": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "NumberStation": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "StartClimateSeries": {
          "type": "string",
          "maxLength": 4,
          "minLength": 1
        },
        "StationCode": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        }
      }
    },
    "DegreeDayNumbers": {
      "type": "object",
      "additionalProperties": false
    },
    "BuildingFunction": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildingFunctionBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BuildingFunctionBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "LocationPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/LocationPolicyBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "LocationPolicyBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MaintenanceContractType": {
      "allOf": [
        {
          "$ref": "#/definitions/MaintenanceContractTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "MaintenanceContractTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "MaintenanceContractTypeContractKindId": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContractKind"
            }
          ]
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "ContractKind": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractKindBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractKindBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "AllocationContractTypeToNominalAccounts": {
          "$ref": "#/definitions/AllocationContractTypeToNominalAccounts"
        },
        "MeterType": {
          "$ref": "#/definitions/MeterType"
        },
        "PaymentDueDate": {
          "$ref": "#/definitions/PaymentDueDate"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "DebtPositionFromyyyyMm": {
          "type": "string",
          "maxLength": 7
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Sorting": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "AllocationContractTypeToNominalAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "MeterType": {
      "allOf": [
        {
          "$ref": "#/definitions/MeterTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "MeterTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "AllocatedInOpc",
        "Co2Equivalent",
        "DeviationLarge",
        "MeasureUnit",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "NominalAccounts": {
          "$ref": "#/definitions/NominalAccount"
        },
        "AllocatedInOpc": {
          "type": "string",
          "readOnly": true,
          "maxLength": 1,
          "minLength": 1
        },
        "BaseFee": {
          "type": "number",
          "format": "decimal"
        },
        "Co2Equivalent": {
          "type": "number",
          "format": "double"
        },
        "DeviationLarge": {
          "type": "number",
          "format": "decimal"
        },
        "DeviationNormal": {
          "type": "number",
          "format": "decimal"
        },
        "ExternalAccountingCode": {
          "type": "string",
          "readOnly": true,
          "maxLength": 5
        },
        "MeasureUnit": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ShowValuesFromDate": {
          "type": "string",
          "maxLength": 7
        },
        "TaxName": {
          "type": "string",
          "maxLength": 50
        },
        "Vat": {
          "type": "integer"
        }
      }
    },
    "NominalAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/NominalAccountBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "NominalAccountBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "AccountType",
        "FibuExportPostingrecord",
        "NominalAccountClass",
        "CalculationLogicFinancialplanningactive",
        "EntryOfIncominginvoices",
        "EntryOfOutgoinginvoices",
        "GeneralLedgerAccount",
        "Label"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Tasks": {
          "$ref": "#/definitions/Tasks"
        },
        "NominalAccountsToCostTypes": {
          "$ref": "#/definitions/NominalAccountsToCostTypes"
        },
        "ProjectTasks": {
          "$ref": "#/definitions/ProjectTasks"
        },
        "AccountType": {
          "$ref": "#/definitions/NominalAccountType"
        },
        "FibuExportPostingrecord": {
          "$ref": "#/definitions/NominalAccountErpParameter"
        },
        "NominalAccountClass": {
          "$ref": "#/definitions/NominalAccountClass"
        },
        "AccountCategory": {
          "type": "string",
          "maxLength": 50
        },
        "CalculationLogicFinancialplanningactive": {
          "type": "boolean"
        },
        "DifferentGlAccountforfinancialaccounting": {
          "type": "string",
          "maxLength": 15
        },
        "EntryOfIncominginvoices": {
          "type": "boolean"
        },
        "EntryOfOutgoinginvoices": {
          "type": "boolean"
        },
        "ExportFinancialAccountingtaxaccount": {
          "type": "number",
          "format": "decimal"
        },
        "FibuVat": {
          "type": "string",
          "maxLength": 2
        },
        "GeneralLedgerAccount": {
          "type": "string",
          "maxLength": 15,
          "minLength": 1
        },
        "Label": {
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "Usage": {
          "type": "string",
          "maxLength": 4000
        }
      }
    },
    "NominalAccountsToCostTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "ProjectTasks": {
      "type": "object",
      "additionalProperties": false
    },
    "NominalAccountType": {
      "allOf": [
        {
          "$ref": "#/definitions/NominalAccountTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "NominalAccountTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name",
        "TypeCode"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "TypeCode": {
          "type": "string",
          "maxLength": 5,
          "minLength": 1
        }
      }
    },
    "NominalAccountErpParameter": {
      "allOf": [
        {
          "$ref": "#/definitions/NominalAccountErpParameterBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "NominalAccountErpParameterBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "ExternalBookingCode",
        "ExternalBookingDescription",
        "ExternalBookingLabel"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "ExternalBookingCode": {
          "type": "string",
          "maxLength": 5,
          "minLength": 1
        },
        "ExternalBookingDescription": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 1
        },
        "ExternalBookingLabel": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "NominalAccountClass": {
      "allOf": [
        {
          "$ref": "#/definitions/NominalAccountClassBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "NominalAccountClassBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "NominalAccountClassType",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "NominalAccounts": {
          "$ref": "#/definitions/NominalAccounts"
        },
        "NominalAccountClassType": {
          "$ref": "#/definitions/NominalAccountClassType"
        },
        "Code": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        }
      }
    },
    "NominalAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "NominalAccountClassType": {
      "allOf": [
        {
          "$ref": "#/definitions/NominalAccountClassTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "NominalAccountClassTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name",
        "Portent"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "NominalAccountClasses": {
          "$ref": "#/definitions/NominalAccountClasses"
        },
        "Name": {
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        },
        "Portent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NominalAccountClasses": {
      "type": "object",
      "additionalProperties": false
    },
    "PaymentDueDate": {
      "allOf": [
        {
          "$ref": "#/definitions/PaymentDueDateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PaymentDueDateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "DateFrom",
        "NumberOfDays",
        "NumberOfMonths",
        "StandardForLeasecontracts",
        "Text"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "DateFrom": {
          "type": "boolean"
        },
        "NumberOfDays": {
          "type": "integer",
          "format": "int32"
        },
        "NumberOfMonths": {
          "type": "integer",
          "format": "int32"
        },
        "Sorting": {
          "type": "integer"
        },
        "SqlFormula": {
          "type": "string",
          "maxLength": 4000
        },
        "StandardForLeasecontracts": {
          "type": "boolean"
        },
        "Text": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "TextPrint": {
          "type": "string",
          "maxLength": 250
        }
      }
    },
    "OperationalCostsPerlocation": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationalCostsPerlocationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "OperationalCostsPerlocationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "LevyType",
        "OperatingCostElementgroup",
        "Site",
        "Chronology",
        "ConditionalCredit",
        "CostElementDescription",
        "CostShare",
        "ExcludeFromBksettlement",
        "TypeOfCost",
        "Unit",
        "Vat"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "NominalAccountsToCostTypes": {
          "$ref": "#/definitions/NominalAccountsToCostTypes"
        },
        "LevyType": {
          "$ref": "#/definitions/OpCostAllocationType"
        },
        "OperatingCostElementgroup": {
          "type": "integer",
          "format": "int32"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "AlwaysShowVat": {
          "type": "boolean"
        },
        "ApportionmentFormula": {
          "type": "string",
          "readOnly": true,
          "maxLength": 100
        },
        "AssignNewRoomsautomatically": {
          "type": "integer"
        },
        "Chronology": {
          "type": "number",
          "format": "decimal"
        },
        "ConditionalCredit": {
          "type": "boolean"
        },
        "CostElementDescription": {
          "type": "string",
          "maxLength": 200,
          "minLength": 1
        },
        "CostShare": {
          "type": "number",
          "format": "decimal"
        },
        "DisplayConsumptionValuesfrommediasupply": {
          "type": "boolean"
        },
        "DistributionPeriod": {
          "type": "string",
          "maxLength": 2
        },
        "ExcludeFromBksettlement": {
          "type": "integer",
          "format": "int32"
        },
        "IncludedInThepackage": {
          "type": "integer"
        },
        "LevyTypevmbvmdir": {
          "type": "string",
          "maxLength": 3
        },
        "TextForExternalsettlement": {
          "type": "string",
          "maxLength": 150
        },
        "TypeOfCost": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Unit": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "Vat": {
          "type": "number",
          "format": "decimal"
        },
        "VatForNetgross": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "OpCostAllocationType": {
      "allOf": [
        {
          "$ref": "#/definitions/OpCostAllocationTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "OpCostAllocationTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 3,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "readOnly": true,
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "OperationalSpace": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationalSpaceBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "OperationalSpaceBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Property",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OutdoorSpaces": {
          "$ref": "#/definitions/OutdoorSpaces"
        },
        "KpiOperatingAreas": {
          "$ref": "#/definitions/KpiOperatingAreas"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "LeasedAreas": {
          "$ref": "#/definitions/LeasedAreas"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "OwnerCompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "Property": {
          "$ref": "#/definitions/Property"
        },
        "TenantCompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "AreaCadm": {
          "type": "number",
          "format": "decimal"
        },
        "CadOid": {
          "type": "string",
          "maxLength": 18
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "PkiValue": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "Space": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "OutdoorSpaces": {
      "type": "object",
      "additionalProperties": false
    },
    "KpiOperatingAreas": {
      "type": "object",
      "additionalProperties": false
    },
    "LeasedAreas": {
      "type": "object",
      "additionalProperties": false
    },
    "Property": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PropertyBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Site",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OutdoorSpaces": {
          "$ref": "#/definitions/OutdoorSpaces"
        },
        "OperationalSpaces": {
          "$ref": "#/definitions/OperationalSpaces"
        },
        "ParcelsLots": {
          "$ref": "#/definitions/ParcelsLots"
        },
        "Buildings": {
          "$ref": "#/definitions/Buildings"
        },
        "AccountingUnit": {
          "$ref": "#/definitions/AccountingUnit"
        },
        "Department": {
          "$ref": "#/definitions/Department"
        },
        "PropertyType": {
          "$ref": "#/definitions/PropertyType"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "AreaCadm": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "AreaLandRegisterm": {
          "type": "number",
          "format": "decimal"
        },
        "CadastralRegister": {
          "type": "string",
          "maxLength": 50
        },
        "CadOid": {
          "type": "string",
          "maxLength": 18
        },
        "City": {
          "type": "string",
          "maxLength": 10
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "CompanyCode": {
          "type": "string",
          "maxLength": 50
        },
        "Country": {
          "type": "integer",
          "format": "int32"
        },
        "EntryInCadastralregistry": {
          "type": "string",
          "maxLength": 50
        },
        "Identification": {
          "type": "string",
          "maxLength": 50
        },
        "LandRegisterMap": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Street": {
          "type": "string",
          "maxLength": 50
        },
        "StreetNumber": {
          "type": "string",
          "maxLength": 10
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 10
        }
      }
    },
    "OperationalSpaces": {
      "type": "object",
      "additionalProperties": false
    },
    "ParcelsLots": {
      "type": "object",
      "additionalProperties": false
    },
    "PropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PropertyTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Floor": {
      "allOf": [
        {
          "$ref": "#/definitions/FloorBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "FloorBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Building",
        "Level",
        "Name",
        "Number",
        "SpaceGross"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Rooms": {
          "$ref": "#/definitions/Rooms"
        },
        "RoomGroups": {
          "$ref": "#/definitions/RoomGroups"
        },
        "Building": {
          "$ref": "#/definitions/Building"
        },
        "BuildingPart": {
          "$ref": "#/definitions/BuildingPart"
        },
        "SpacePool": {
          "$ref": "#/definitions/SpacePool"
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "HeightNet": {
          "type": "number",
          "format": "decimal"
        },
        "HeightRelativeToReferenceHeight": {
          "type": "number",
          "format": "decimal"
        },
        "IfcGlobalId": {
          "type": "string",
          "readOnly": true,
          "maxLength": 22
        },
        "Level": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "NavvisCode": {
          "type": "string",
          "maxLength": 50
        },
        "Number": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "SpaceGross": {
          "type": "number",
          "format": "decimal"
        },
        "SpacePerDesk": {
          "type": "number",
          "format": "decimal"
        },
        "StoreyGrossHeight": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Rooms": {
      "type": "object",
      "additionalProperties": false
    },
    "RoomGroups": {
      "type": "object",
      "additionalProperties": false
    },
    "BuildingPart": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildingPartBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BuildingPartBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Building",
        "Code",
        "Name",
        "Number"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Floors": {
          "$ref": "#/definitions/Floors"
        },
        "Building": {
          "$ref": "#/definitions/Building"
        },
        "CadOid": {
          "type": "string",
          "maxLength": 18
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Number": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Plane": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "SpacePool": {
      "allOf": [
        {
          "$ref": "#/definitions/SpacePoolBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SpacePoolBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Floors": {
          "$ref": "#/definitions/Floors"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Hatching": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Room": {
      "allOf": [
        {
          "$ref": "#/definitions/RoomBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "RoomBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Floor",
        "UsageTypeDin277",
        "CanBeHeated",
        "Daylight",
        "ElectricitySupply",
        "Elevator",
        "FalseCeiling",
        "FloorDrainage",
        "GuaranteedMinimumRent",
        "Lettable",
        "RentableInComplexContract",
        "Reservable",
        "RoomNumber"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "AllocationDepartmentToRooms": {
          "$ref": "#/definitions/AllocationDepartmentToRooms"
        },
        "RoomCostCenters": {
          "$ref": "#/definitions/RoomCostCenters"
        },
        "AssignmentRoomsToServiceTypes": {
          "$ref": "#/definitions/AssignmentRoomsToServiceTypes"
        },
        "AllocationRentalUnitToRooms": {
          "$ref": "#/definitions/AllocationRentalUnitToRooms"
        },
        "Assets": {
          "$ref": "#/definitions/Assets"
        },
        "Desks": {
          "$ref": "#/definitions/Desks"
        },
        "Communications": {
          "$ref": "#/definitions/Communications"
        },
        "PersonInRooms": {
          "$ref": "#/definitions/PersonInRooms"
        },
        "CleaningQualityPerRooms": {
          "$ref": "#/definitions/CleaningQualityPerRooms"
        },
        "Doors": {
          "$ref": "#/definitions/Doors"
        },
        "RentableAreaRooms": {
          "$ref": "#/definitions/RentableAreaRooms"
        },
        "RentedAssets": {
          "$ref": "#/definitions/RentedAssets"
        },
        "CeilingCovering": {
          "$ref": "#/definitions/CeilingCovering"
        },
        "CompanyAddressOfOwner": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "CostCenter": {
          "$ref": "#/definitions/CostCenter"
        },
        "Floor": {
          "$ref": "#/definitions/Floor"
        },
        "FloorCovering": {
          "$ref": "#/definitions/FloorCovering"
        },
        "InternalUsageType": {
          "$ref": "#/definitions/InternalUsageType"
        },
        "Landlord": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/CompanyAddress"
            }
          ]
        },
        "PrimaryUsageStatus": {
          "$ref": "#/definitions/PrimaryUsageState"
        },
        "ReservedForTenancyAgreement": {
          "$ref": "#/definitions/TenancyAgreement"
        },
        "RoomGroup": {
          "$ref": "#/definitions/RoomGroup"
        },
        "SecondaryUsageStatus": {
          "$ref": "#/definitions/SecondaryUsageState"
        },
        "SpaceAllocation": {
          "$ref": "#/definitions/SpaceAllocation"
        },
        "SpaceCategory": {
          "$ref": "#/definitions/SpaceType"
        },
        "SpaceServiceType": {
          "$ref": "#/definitions/SpaceServiceType"
        },
        "SurchargeForActivityType": {
          "$ref": "#/definitions/SpaceServiceType"
        },
        "Tenant": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/CompanyAddress"
            }
          ]
        },
        "UsageTypeDin277": {
          "$ref": "#/definitions/Din277UsageType"
        },
        "WallCovering": {
          "$ref": "#/definitions/WallCovering"
        },
        "Acoustics": {
          "type": "string",
          "maxLength": 50
        },
        "AlternativeCode": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "Area": {
          "type": "number",
          "format": "decimal"
        },
        "Barcode": {
          "type": "string",
          "maxLength": 30
        },
        "CadOid": {
          "type": "string",
          "readOnly": true,
          "maxLength": 18
        },
        "CanBeHeated": {
          "type": "boolean"
        },
        "CategoryDescription": {
          "type": "string",
          "maxLength": 25
        },
        "CeilingArea": {
          "type": "number",
          "format": "decimal"
        },
        "CeilingAttributes": {
          "type": "string",
          "maxLength": 50
        },
        "CeilingDepth": {
          "type": "number",
          "format": "decimal"
        },
        "CeilingLoadBearingCapacity": {
          "type": "number",
          "format": "decimal"
        },
        "CeilingMaterial": {
          "type": "string",
          "maxLength": 50
        },
        "CeilingSystem": {
          "type": "string",
          "maxLength": 50
        },
        "CeilingWidth": {
          "type": "number",
          "format": "decimal"
        },
        "Circumference": {
          "type": "number",
          "format": "decimal"
        },
        "CleanlinessClass": {
          "type": "string",
          "maxLength": 3
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "CurrentCondition": {
          "type": "string",
          "maxLength": 50
        },
        "DateOfLaying": {
          "type": "string",
          "format": "date-time"
        },
        "Daylight": {
          "type": "boolean"
        },
        "DescriptionOfLocation": {
          "type": "string",
          "maxLength": 50
        },
        "ElectricitySupply": {
          "type": "boolean"
        },
        "Elevator": {
          "type": "boolean"
        },
        "EscapeRoute": {
          "type": "integer"
        },
        "FalseCeiling": {
          "type": "boolean"
        },
        "FloorDrainage": {
          "type": "boolean"
        },
        "FloorStructure": {
          "type": "string",
          "maxLength": 50
        },
        "GuaranteedMinimumRent": {
          "type": "boolean"
        },
        "HeatableSurfacem178": {
          "type": "number",
          "format": "decimal"
        },
        "IfcGlobalId": {
          "type": "string",
          "maxLength": 22
        },
        "ImputedAreaForSpaceDistribution": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "LeasePricePerSquaremeter": {
          "type": "number",
          "format": "decimal"
        },
        "Lettable": {
          "type": "boolean"
        },
        "LightExposureMax": {
          "type": "string",
          "maxLength": 50
        },
        "LightExposureMin": {
          "type": "string",
          "maxLength": 50
        },
        "LimitAirPurity": {
          "type": "string",
          "maxLength": 50
        },
        "LimitHumidity": {
          "type": "string",
          "maxLength": 50
        },
        "LimitNoiseLevel": {
          "type": "string",
          "maxLength": 50
        },
        "LoadBearingCapacity": {
          "type": "number",
          "format": "decimal"
        },
        "MaterialNumber": {
          "type": "string",
          "maxLength": 25
        },
        "Name": {
          "type": "string",
          "maxLength": 50
        },
        "NavvisCode": {
          "type": "string",
          "maxLength": 50
        },
        "NetRoomSurface": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "NumberOnDoorplate": {
          "type": "string",
          "maxLength": 23
        },
        "OptionToRentUntil": {
          "type": "string",
          "format": "date-time"
        },
        "PolygonArea": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "QuantityOfWorkplaces": {
          "type": "integer",
          "format": "int32"
        },
        "RawCeilingHeight": {
          "type": "number",
          "format": "decimal"
        },
        "Remark": {
          "type": "string",
          "maxLength": 50
        },
        "Remark1": {
          "type": "string",
          "maxLength": 500
        },
        "Remark5": {
          "type": "string",
          "maxLength": 500
        },
        "Remark6": {
          "type": "string",
          "maxLength": 500
        },
        "RentableArea": {
          "type": "number",
          "format": "decimal"
        },
        "RentableAreaFactor": {
          "type": "number",
          "format": "decimal"
        },
        "RentableAreaWithinTheRentableZone": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "RentableInComplexContract": {
          "type": "boolean"
        },
        "Reservable": {
          "type": "boolean"
        },
        "RoomHeight": {
          "type": "number",
          "format": "decimal"
        },
        "RoomNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "RoomType": {
          "type": "string",
          "maxLength": 50
        },
        "RoomVolume": {
          "type": "number",
          "format": "decimal"
        },
        "StandardNoOfpowersockets": {
          "type": "number",
          "format": "decimal"
        },
        "SubstractedAream178": {
          "type": "number",
          "format": "decimal"
        },
        "SuperficialLoad": {
          "type": "number",
          "format": "decimal"
        },
        "TargetTemperatureSummer": {
          "type": "string",
          "maxLength": 50
        },
        "TargetTemperatureWinter": {
          "type": "string",
          "maxLength": 50
        },
        "TenantId": {
          "type": "string",
          "readOnly": true,
          "maxLength": 10
        },
        "UnusedArea": {
          "type": "number",
          "format": "double"
        },
        "VentilationRate": {
          "type": "string",
          "maxLength": 50
        },
        "WallArea": {
          "type": "number",
          "format": "decimal"
        },
        "WallMaterial": {
          "type": "string",
          "maxLength": 50
        },
        "WorkingLoad": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "AssignmentRoomsToServiceTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "AllocationRentalUnitToRooms": {
      "type": "object",
      "additionalProperties": false
    },
    "Desks": {
      "type": "object",
      "additionalProperties": false
    },
    "CleaningQualityPerRooms": {
      "type": "object",
      "additionalProperties": false
    },
    "Doors": {
      "type": "object",
      "additionalProperties": false
    },
    "RentableAreaRooms": {
      "type": "object",
      "additionalProperties": false
    },
    "RentedAssets": {
      "type": "object",
      "additionalProperties": false
    },
    "CeilingCovering": {
      "allOf": [
        {
          "$ref": "#/definitions/CeilingCoveringBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CeilingCoveringBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FloorCovering": {
      "allOf": [
        {
          "$ref": "#/definitions/FloorCoveringBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "FloorCoveringBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 30
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InternalUsageType": {
      "allOf": [
        {
          "$ref": "#/definitions/InternalUsageTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "InternalUsageTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "UsageTypesDin277",
        "Code",
        "DoNotCreateadoorlabel",
        "Name",
        "RentableArea",
        "ShareOfRentedareainnetarea"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Rooms": {
          "$ref": "#/definitions/Rooms"
        },
        "UsageTypesDin277": {
          "$ref": "#/definitions/Din277UsageType"
        },
        "BackgroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Code": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "DoNotCreateadoorlabel": {
          "type": "boolean"
        },
        "ForegroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Pattern": {
          "type": "number",
          "format": "decimal"
        },
        "RentableArea": {
          "type": "boolean"
        },
        "ShareOfRentedareainnetarea": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Din277UsageType": {
      "allOf": [
        {
          "$ref": "#/definitions/Din277UsageTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "Din277UsageTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "UsageGroup",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "AllocationLeasePriceToUsageTypes": {
          "$ref": "#/definitions/AllocationLeasePriceToUsageTypes"
        },
        "InternalUsageTypes": {
          "$ref": "#/definitions/InternalUsageTypes"
        },
        "Rooms": {
          "$ref": "#/definitions/Rooms"
        },
        "UsageGroup": {
          "$ref": "#/definitions/UsageGroup"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 10
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        },
        "UsageGroupCode": {
          "type": "string",
          "maxLength": 10
        }
      }
    },
    "AllocationLeasePriceToUsageTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "InternalUsageTypes": {
      "type": "object",
      "additionalProperties": false
    },
    "UsageGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/UsageGroupBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "UsageGroupBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Code": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        },
        "Description": {
          "type": "string",
          "maxLength": 50
        },
        "ForegroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Number": {
          "type": "string",
          "maxLength": 1
        },
        "Pattern": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PrimaryUsageState": {
      "allOf": [
        {
          "$ref": "#/definitions/PrimaryUsageStateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "PrimaryUsageStateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TenancyAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "OpCostAccountingType",
        "Site",
        "TenancyAgreementContractType",
        "TenancyAgreementStatus",
        "TenancyAgreementType",
        "AllInclusiveContract",
        "CompetitionProtection",
        "DisplayInTenantbalance",
        "FireDetectionSystem",
        "IntrusionDetectionSystem",
        "LumpSumOperatingCosts",
        "Number",
        "PestControl",
        "RenewalOption",
        "TenantSBankAccountalsoappliestothesettleme",
        "TermFrom",
        "UnlimitedInTimeAfterDate",
        "WaiverOfLandlordSlien"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OutgoingInvoices": {
          "$ref": "#/definitions/OutgoingInvoices"
        },
        "AllocationOfAccountBookings": {
          "$ref": "#/definitions/AllocationOfAccountBookings"
        },
        "Reminders": {
          "$ref": "#/definitions/Reminders"
        },
        "TenancyAgreementFloorCoverings": {
          "$ref": "#/definitions/TenancyAgreementFloorCoverings"
        },
        "TenancyAgreementInventories": {
          "$ref": "#/definitions/TenancyAgreementInventories"
        },
        "TenancyAgreementDeposits": {
          "$ref": "#/definitions/TenancyAgreementDeposits"
        },
        "TenancyAgreementContacts": {
          "$ref": "#/definitions/TenancyAgreementContacts"
        },
        "TenancyAgreementNegativAccounts": {
          "$ref": "#/definitions/TenancyAgreementNegativAccounts"
        },
        "TenancyAgreementOptions": {
          "$ref": "#/definitions/TenancyAgreementOptions"
        },
        "LeaseContractsDebitEntries": {
          "$ref": "#/definitions/LeaseContractsDebitEntries"
        },
        "AnnualContractReviews": {
          "$ref": "#/definitions/AnnualContractReviews"
        },
        "OneTimeContractReviews": {
          "$ref": "#/definitions/OneTimeContractReviews"
        },
        "LeasePayments": {
          "$ref": "#/definitions/LeasePayments"
        },
        "RentPaymentSchedules": {
          "$ref": "#/definitions/RentPaymentSchedules"
        },
        "Adjustment": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/AdjustmentType"
            }
          ]
        },
        "BankAccountForOpc": {
          "type": "integer",
          "format": "int32"
        },
        "BankAccountForRent": {
          "type": "integer",
          "format": "int32"
        },
        "CorporationOpc": {
          "$ref": "#/definitions/Corporation"
        },
        "CorporationRent": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Corporation"
            }
          ]
        },
        "CostCenter": {
          "$ref": "#/definitions/CostCenter"
        },
        "Debitor": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Debitor"
            }
          ]
        },
        "IndexAdjustmentType": {
          "$ref": "#/definitions/TenancyAgreementIndexChangeType"
        },
        "MainTenancyAgreement": {
          "$ref": "#/definitions/TenancyAgreement"
        },
        "OpCostAccountingType": {
          "$ref": "#/definitions/OpCostAccountingType"
        },
        "OwnBankAccountOpc": {
          "$ref": "#/definitions/OwnBankAccount"
        },
        "OwnBankAccountRent": {
          "$ref": "#/definitions/OwnBankAccount"
        },
        "Person": {
          "$ref": "#/definitions/Person"
        },
        "PowerContract": {
          "$ref": "#/definitions/Contract"
        },
        "PriceIndexPreselection": {
          "$ref": "#/definitions/ConsumerPriceIndex"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "TenancyAgreementContractType": {
          "$ref": "#/definitions/TenancyAgreementContractType"
        },
        "TenancyAgreementStatus": {
          "$ref": "#/definitions/TenancyAgreementState"
        },
        "TenancyAgreementType": {
          "$ref": "#/definitions/TenancyAgreementType"
        },
        "Tenant": {
          "$ref": "#/definitions/Tenant"
        },
        "UnitAdjustmentThreshold": {
          "$ref": "#/definitions/TenancyAgreementIndex"
        },
        "ActualAdjustmentAsapercentageofindexchange": {
          "type": "number",
          "format": "decimal"
        },
        "AdjustmentEveryMonths": {
          "type": "number",
          "format": "decimal"
        },
        "AdjustmentThresholdpointsOr": {
          "type": "number",
          "format": "decimal"
        },
        "AllInclusiveContract": {
          "type": "boolean"
        },
        "AtmendOfmonthqendofquarterjendofyear": {
          "type": "string",
          "maxLength": 1
        },
        "CadClientIndicator": {
          "type": "string",
          "maxLength": 5
        },
        "CompetitionProtection": {
          "type": "boolean"
        },
        "Consignees": {
          "type": "string",
          "maxLength": 8000
        },
        "ContactPersonOfthelandlordOld": {
          "type": "string",
          "maxLength": 50
        },
        "ContractNumberOfoldleaseOut": {
          "type": "string",
          "maxLength": 50
        },
        "ContractNumberOfoldleaseOut1": {
          "type": "string",
          "maxLength": 50
        },
        "ContractNumberOperatingcostsold": {
          "type": "string",
          "maxLength": 50
        },
        "ContractNumberOperatingcostsold1": {
          "type": "string",
          "maxLength": 50
        },
        "ContractScale1Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractScale2Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractScale3Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractScale4Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractScale5Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractScale6Months": {
          "type": "number",
          "format": "decimal"
        },
        "ContractSignageDate": {
          "type": "string",
          "format": "date-time"
        },
        "ContractTypeOld1": {
          "type": "string",
          "maxLength": 30
        },
        "ContractTypeOld2": {
          "type": "string",
          "maxLength": 30
        },
        "DateInitialIndex": {
          "type": "string",
          "format": "date-time"
        },
        "DisplayInTenantbalance": {
          "type": "boolean"
        },
        "FireDetectionSystem": {
          "type": "boolean"
        },
        "IndexAdjustmentDeactivated": {
          "type": "boolean"
        },
        "IndexAdjustmentTypeOld": {
          "type": "string",
          "maxLength": 15
        },
        "IndexBaseYear": {
          "type": "integer",
          "format": "int32"
        },
        "InitialIndex": {
          "type": "number",
          "format": "decimal"
        },
        "IntrusionDetectionSystem": {
          "type": "boolean"
        },
        "LastAdjustmentColdrent": {
          "type": "string",
          "format": "date-time"
        },
        "LastAdjustmentMadeon": {
          "type": "string",
          "format": "date-time"
        },
        "LastAdjustmentMadetopriceindexValue": {
          "type": "number",
          "format": "decimal"
        },
        "LastAdjustmentOperatingcostadvancepayment": {
          "type": "string",
          "format": "date-time"
        },
        "LowerThresholdValue": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "LumpSumOperatingCosts": {
          "type": "boolean"
        },
        "MonthOfTermination": {
          "type": "number",
          "format": "decimal"
        },
        "NextPossibleEnd": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "NextPossibleTermination": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "Number": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ObjectsExcludedFromseizure": {
          "type": "string",
          "maxLength": 250
        },
        "OpcNumber": {
          "type": "string",
          "maxLength": 50
        },
        "PestControl": {
          "type": "boolean"
        },
        "PriceScale1": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale1Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale1LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale1Perc": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale2": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale2Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale2LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale2Perc": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale3": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale3Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale3LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale3Perc": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale4": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale4Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale4LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale4Perc": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale5": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale5Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale5LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale5Perc": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale6": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale6Flat": {
          "type": "number",
          "format": "decimal"
        },
        "PriceScale6LastDate": {
          "type": "string",
          "format": "date-time"
        },
        "PriceScale6Perc": {
          "type": "number",
          "format": "decimal"
        },
        "ProlongationMonths": {
          "type": "number",
          "format": "decimal"
        },
        "ProlongationUntil": {
          "type": "string",
          "format": "date-time"
        },
        "Remark": {
          "type": "string",
          "maxLength": 8000
        },
        "RenewalOption": {
          "type": "boolean"
        },
        "RentedProperty": {
          "type": "string",
          "maxLength": 250
        },
        "SearchPatternForpaymentofbasicrent": {
          "type": "string",
          "maxLength": 255
        },
        "SearchPatternForpaymentoperatingcosts": {
          "type": "string",
          "maxLength": 255
        },
        "SearchPatternFortotalrentpayment": {
          "type": "string",
          "maxLength": 255
        },
        "StartOfIndexing": {
          "type": "string",
          "format": "date-time"
        },
        "TenantSBankAccountalsoappliestothesettleme": {
          "type": "boolean"
        },
        "TermFrom": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "TerminationBy": {
          "type": "string",
          "format": "date-time"
        },
        "TerminationDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "TerminationFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "TerminationIntervall": {
          "type": "number",
          "format": "decimal"
        },
        "TextTermOfNotice": {
          "type": "string",
          "maxLength": 1
        },
        "TextTermOfNotice2": {
          "type": "string",
          "maxLength": 1
        },
        "TextTermOfNotice3": {
          "type": "string",
          "maxLength": 1
        },
        "To": {
          "type": "string",
          "format": "date-time"
        },
        "UnitPointsOrpercent": {
          "type": "string",
          "maxLength": 3
        },
        "UnlimitedInTimeAfterDate": {
          "type": "boolean"
        },
        "UpperThresholdValue": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "WaiverOfLandlordSlien": {
          "type": "boolean"
        },
        "Z1RentIncreaseon": {
          "type": "string",
          "format": "date-time"
        },
        "Z3RentIncreaseon": {
          "type": "string",
          "format": "date-time"
        },
        "Z4RentIncreaseon": {
          "type": "string",
          "format": "date-time"
        },
        "Z5RentIncreaseon": {
          "type": "string",
          "format": "date-time"
        },
        "Z6RentIncreaseon": {
          "type": "string",
          "format": "date-time"
        },
        "ZRentIncreaseon": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OutgoingInvoices": {
      "type": "object",
      "additionalProperties": false
    },
    "AllocationOfAccountBookings": {
      "type": "object",
      "additionalProperties": false
    },
    "Reminders": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementFloorCoverings": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementInventories": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementDeposits": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementContacts": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementNegativAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreementOptions": {
      "type": "object",
      "additionalProperties": false
    },
    "LeaseContractsDebitEntries": {
      "type": "object",
      "additionalProperties": false
    },
    "AnnualContractReviews": {
      "type": "object",
      "additionalProperties": false
    },
    "OneTimeContractReviews": {
      "type": "object",
      "additionalProperties": false
    },
    "LeasePayments": {
      "type": "object",
      "additionalProperties": false
    },
    "RentPaymentSchedules": {
      "type": "object",
      "additionalProperties": false
    },
    "AdjustmentType": {
      "allOf": [
        {
          "$ref": "#/definitions/AdjustmentTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "AdjustmentTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "FutureCalculationActivated",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "FutureCalculationActivated": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "Corporation": {
      "allOf": [
        {
          "$ref": "#/definitions/CorporationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "CorporationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CompanyAddress",
        "ActualTaxation",
        "AllowDeletionOfarinvoices",
        "AllowDeletionOfincominginvoices",
        "Company_no",
        "CreditorIdentificationNumber",
        "DeletionOfExportdateallowed",
        "FinancialAccountingExportactive",
        "FixedIndicia",
        "Name",
        "OperatorObligation",
        "PaymentTransactionsActive",
        "PaymentTransactionsCreditmemosactive",
        "PrintAdministratorAddress",
        "PrintServiceRecipient",
        "ReleaseWorkflowActive"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Orders": {
          "$ref": "#/definitions/Orders"
        },
        "AllocationOfAccountBookingsOfCorporation": {
          "$ref": "#/definitions/AllocationOfAccountBookings"
        },
        "OwnBankAccounts": {
          "$ref": "#/definitions/OwnBankAccounts"
        },
        "AccountingJournalTemplateAccounts": {
          "$ref": "#/definitions/AccountingJournalTemplateAccounts"
        },
        "BookingYears": {
          "$ref": "#/definitions/BookingYears"
        },
        "PlanningPeriods": {
          "$ref": "#/definitions/PlanningPeriods"
        },
        "InitialBalanceDebitors": {
          "$ref": "#/definitions/InitialBalanceDebitors"
        },
        "InitialBalanceCreditors": {
          "$ref": "#/definitions/InitialBalanceCreditors"
        },
        "NominalAccountsForfinancialaccountings": {
          "$ref": "#/definitions/NominalAccountsForfinancialaccountings"
        },
        "BudgetProjects": {
          "$ref": "#/definitions/BudgetProjects"
        },
        "Contracts": {
          "$ref": "#/definitions/Contracts"
        },
        "RentBookingDatevs": {
          "$ref": "#/definitions/RentBookingDatevs"
        },
        "Corporations": {
          "$ref": "#/definitions/Corporations"
        },
        "NominalAccountsServiceChargeAdvancePayments": {
          "$ref": "#/definitions/NominalAccountsServiceChargeAdvancePayments"
        },
        "NominalAccountsRents": {
          "$ref": "#/definitions/NominalAccountsRents"
        },
        "CorporationVatAccounts": {
          "$ref": "#/definitions/CorporationVatAccounts"
        },
        "TenancyAgreementDeposits": {
          "$ref": "#/definitions/TenancyAgreementDeposits"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "MailHeader": {
          "$ref": "#/definitions/MailHeader"
        },
        "ParentCorporation": {
          "$ref": "#/definitions/Corporation"
        },
        "ActualTaxation": {
          "type": "boolean"
        },
        "AlliancePartnerDatevaccount": {
          "type": "string",
          "maxLength": 15
        },
        "AllowDeletionOfarinvoices": {
          "type": "boolean",
          "readOnly": true
        },
        "AllowDeletionOfincominginvoices": {
          "type": "boolean"
        },
        "BillFooterPicture": {
          "type": "string",
          "format": "byte"
        },
        "BillLogoPicture": {
          "type": "string",
          "format": "byte"
        },
        "CcReceiver": {
          "type": "string",
          "maxLength": 150
        },
        "Comment": {
          "type": "string",
          "maxLength": 50
        },
        "Company_no": {
          "type": "string",
          "maxLength": 5,
          "minLength": 1
        },
        "CreditorIdentificationNumber": {
          "type": "string",
          "maxLength": 18,
          "minLength": 1
        },
        "DebitPositionFrommonth": {
          "type": "string",
          "maxLength": 7
        },
        "DeletionOfExportdateallowed": {
          "type": "boolean",
          "readOnly": true
        },
        "DirectoryForAccounts": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "Disclaimer": {
          "type": "string",
          "maxLength": 4000
        },
        "EMailForIncominginvoices": {
          "type": "string",
          "maxLength": 250
        },
        "FileNameOutgoingInvoice": {
          "type": "string",
          "maxLength": 150
        },
        "FilePathExportinvoicescreditors": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "FilePathExportinvoicesdebitors": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "FinancialAccountingExportactive": {
          "type": "boolean"
        },
        "FinancialClient": {
          "type": "string",
          "maxLength": 20
        },
        "FixedIndicia": {
          "type": "boolean"
        },
        "InvoiceNote": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "NumberOld": {
          "type": "string",
          "maxLength": 5
        },
        "OperatorObligation": {
          "type": "boolean"
        },
        "PaymentTransactionsActive": {
          "type": "boolean"
        },
        "PaymentTransactionsCreditmemosactive": {
          "type": "boolean"
        },
        "PrintAdministratorAddress": {
          "type": "boolean"
        },
        "PrintServiceRecipient": {
          "type": "boolean"
        },
        "ReleaseWorkflowActive": {
          "type": "boolean"
        },
        "RemainingTermOfopenEndedcontractsmonths": {
          "type": "integer",
          "format": "int32"
        },
        "RentalContractsUnlimitedfromtermmonths": {
          "type": "integer",
          "format": "int32"
        },
        "ScannerDirectory": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "SenderSAddress": {
          "type": "string",
          "maxLength": 100
        },
        "SettlementAccount": {
          "type": "string",
          "maxLength": 15
        }
      }
    },
    "OwnBankAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "AccountingJournalTemplateAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "BookingYears": {
      "type": "object",
      "additionalProperties": false
    },
    "PlanningPeriods": {
      "type": "object",
      "additionalProperties": false
    },
    "InitialBalanceDebitors": {
      "type": "object",
      "additionalProperties": false
    },
    "InitialBalanceCreditors": {
      "type": "object",
      "additionalProperties": false
    },
    "NominalAccountsForfinancialaccountings": {
      "type": "object",
      "additionalProperties": false
    },
    "BudgetProjects": {
      "type": "object",
      "additionalProperties": false
    },
    "RentBookingDatevs": {
      "type": "object",
      "additionalProperties": false
    },
    "Corporations": {
      "type": "object",
      "additionalProperties": false
    },
    "NominalAccountsServiceChargeAdvancePayments": {
      "type": "object",
      "additionalProperties": false
    },
    "NominalAccountsRents": {
      "type": "object",
      "additionalProperties": false
    },
    "CorporationVatAccounts": {
      "type": "object",
      "additionalProperties": false
    },
    "MailHeader": {
      "allOf": [
        {
          "$ref": "#/definitions/MailHeaderBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "MailHeaderBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "EmailCode"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "EmailTexts": {
          "$ref": "#/definitions/EmailTexts"
        },
        "EmailCode": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "EmailTexts": {
      "type": "object",
      "additionalProperties": false
    },
    "Debitor": {
      "allOf": [
        {
          "$ref": "#/definitions/DebitorBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "DebitorBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "CompanyAddress",
        "VatRate",
        "CustomerNo",
        "DataImportFromSap",
        "DefaultCashDiscount",
        "FinancialAccountingExport"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OutgoingInvoices": {
          "$ref": "#/definitions/OutgoingInvoices"
        },
        "AllocationOfAccountBookings": {
          "$ref": "#/definitions/AllocationOfAccountBookings"
        },
        "InitialBalanceDebitors": {
          "$ref": "#/definitions/InitialBalanceDebitors"
        },
        "ReceivedOrders": {
          "$ref": "#/definitions/ReceivedOrders"
        },
        "CustomersProducts": {
          "$ref": "#/definitions/CustomersProducts"
        },
        "DeliveryNotes": {
          "$ref": "#/definitions/DeliveryNotes"
        },
        "ProductIndexes": {
          "$ref": "#/definitions/ProductIndexes"
        },
        "ProductPrices": {
          "$ref": "#/definitions/ProductPrices"
        },
        "Tenants": {
          "$ref": "#/definitions/Tenants"
        },
        "TenancyAgreements": {
          "$ref": "#/definitions/TenancyAgreements"
        },
        "CompanyAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "VatRate": {
          "$ref": "#/definitions/VatRate"
        },
        "CountyCourt": {
          "type": "string",
          "maxLength": 100
        },
        "CustomerNo": {
          "type": "string",
          "maxLength": 15,
          "minLength": 1
        },
        "CustomerNumberOld": {
          "type": "string",
          "maxLength": 50
        },
        "DataImportFromSap": {
          "type": "boolean"
        },
        "DefaultCashDiscount": {
          "type": "number",
          "format": "decimal"
        },
        "FinancialAccountingExport": {
          "type": "boolean"
        },
        "HraNumber": {
          "type": "string",
          "maxLength": 50
        },
        "HrbNumber": {
          "type": "string",
          "maxLength": 50
        },
        "IdentificationTextBankstatement": {
          "type": "string",
          "maxLength": 100
        },
        "Remark": {
          "type": "string",
          "maxLength": 100
        },
        "SendingInvoicesByeMail": {
          "type": "boolean"
        },
        "TaxIdentificationNumber": {
          "type": "string",
          "maxLength": 50
        },
        "VatNo": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "ReceivedOrders": {
      "type": "object",
      "additionalProperties": false
    },
    "CustomersProducts": {
      "type": "object",
      "additionalProperties": false
    },
    "DeliveryNotes": {
      "type": "object",
      "additionalProperties": false
    },
    "ProductIndexes": {
      "type": "object",
      "additionalProperties": false
    },
    "ProductPrices": {
      "type": "object",
      "additionalProperties": false
    },
    "Tenants": {
      "type": "object",
      "additionalProperties": false
    },
    "TenancyAgreements": {
      "type": "object",
      "additionalProperties": false
    },
    "VatRate": {
      "allOf": [
        {
          "$ref": "#/definitions/VatRateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "VatRateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Remark",
        "TaxRate",
        "ValidFrom"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Remark": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "TaxRate": {
          "type": "number",
          "format": "decimal"
        },
        "ValidFrom": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "ValidUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TenancyAgreementIndexChangeType": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementIndexChangeTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementIndexChangeTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OpCostAccountingType": {
      "allOf": [
        {
          "$ref": "#/definitions/OpCostAccountingTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "OpCostAccountingTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "readOnly": true,
          "maxLength": 15,
          "minLength": 1
        }
      }
    },
    "OwnBankAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/OwnBankAccountBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "OwnBankAccountBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "AccountType",
        "BankSortCode",
        "Corporation",
        "NominalAccounts",
        "AccountBalanceStart",
        "ActiveInAccountRoundCall",
        "DateStart",
        "Iban",
        "StandardAccountOfCoperation",
        "Usableness"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "AccountBookings": {
          "$ref": "#/definitions/AccountBookings"
        },
        "AccountStatements": {
          "$ref": "#/definitions/AccountStatements"
        },
        "BankingSessions": {
          "$ref": "#/definitions/BankingSessions"
        },
        "EbicsBankingRights": {
          "$ref": "#/definitions/EbicsBankingRights"
        },
        "AccountType": {
          "$ref": "#/definitions/AccountType"
        },
        "BankDeposit": {
          "$ref": "#/definitions/BankDeposit"
        },
        "BankSortCode": {
          "$ref": "#/definitions/BankSortCode"
        },
        "Corporation": {
          "$ref": "#/definitions/Corporation"
        },
        "NominalAccounts": {
          "$ref": "#/definitions/NominalAccount"
        },
        "AccountBalanceActual": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "AccountBalanceStart": {
          "type": "number",
          "format": "decimal"
        },
        "AccountNoBank": {
          "type": "string",
          "maxLength": 15
        },
        "AccountNoOnstatement": {
          "type": "string",
          "maxLength": 35
        },
        "AccountOwner": {
          "type": "string",
          "maxLength": 60
        },
        "ActiveInAccountRoundCall": {
          "type": "boolean"
        },
        "BankCodeNumber": {
          "type": "string",
          "maxLength": 25
        },
        "BankName": {
          "type": "string",
          "maxLength": 60
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "DateActual": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "DateStart": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "EbicsAccessActive": {
          "type": "boolean"
        },
        "EbicsAccessActivefrom": {
          "type": "string",
          "format": "date-time"
        },
        "EbicsHost": {
          "type": "string",
          "maxLength": 50
        },
        "EbicsProtocollH002Version": {
          "type": "string",
          "readOnly": true,
          "maxLength": 10
        },
        "EbicsProtocollH003Version": {
          "type": "string",
          "readOnly": true,
          "maxLength": 10
        },
        "EbicsProtocollH004Version": {
          "type": "string",
          "readOnly": true,
          "maxLength": 10
        },
        "EbicsUrl": {
          "type": "string",
          "maxLength": 255
        },
        "FintsAccessOnlinebanking": {
          "type": "boolean"
        },
        "Iban": {
          "type": "string",
          "maxLength": 34,
          "minLength": 1
        },
        "NoBankStatement": {
          "type": "integer",
          "readOnly": true,
          "format": "int64"
        },
        "Spot": {
          "type": "string",
          "maxLength": 60
        },
        "StandardAccountOfCoperation": {
          "type": "boolean"
        },
        "StorageLocationFordmefiles": {
          "type": "string",
          "maxLength": 250
        },
        "StreetHouseNo": {
          "type": "string",
          "maxLength": 60
        },
        "Usableness": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "ZipCode": {
          "type": "string",
          "maxLength": 10
        }
      }
    },
    "AccountBookings": {
      "type": "object",
      "additionalProperties": false
    },
    "AccountStatements": {
      "type": "object",
      "additionalProperties": false
    },
    "BankingSessions": {
      "type": "object",
      "additionalProperties": false
    },
    "EbicsBankingRights": {
      "type": "object",
      "additionalProperties": false
    },
    "AccountType": {
      "allOf": [
        {
          "$ref": "#/definitions/AccountTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "AccountTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Description",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OwnBankAccounts": {
          "$ref": "#/definitions/OwnBankAccounts"
        },
        "Description": {
          "type": "string",
          "maxLength": 4000,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "BankDeposit": {
      "allOf": [
        {
          "$ref": "#/definitions/BankDepositBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BankDepositBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "BankName",
        "ConnectorName",
        "Suffix"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "OwnBankAccounts": {
          "$ref": "#/definitions/OwnBankAccounts"
        },
        "BankName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ConnectorName": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "PathToAccountScheduleFile": {
          "type": "string",
          "maxLength": 250
        },
        "Suffix": {
          "type": "string",
          "maxLength": 10,
          "minLength": 1
        }
      }
    },
    "BankSortCode": {
      "allOf": [
        {
          "$ref": "#/definitions/BankSortCodeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "BankSortCodeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "BankName",
        "DataRecordNo",
        "deland",
        "InternationalBankCodeBic"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BankCodeBlz": {
          "type": "string",
          "maxLength": 15
        },
        "BankName": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "DataRecordNo": {
          "type": "string",
          "maxLength": 8,
          "minLength": 1
        },
        "deland": {
          "type": "string",
          "maxLength": 2,
          "minLength": 1
        },
        "InternationalBankCodeBic": {
          "type": "string",
          "maxLength": 15,
          "minLength": 1
        },
        "Pan": {
          "type": "string",
          "maxLength": 5
        },
        "Postcode": {
          "type": "string",
          "readOnly": true,
          "maxLength": 5
        },
        "ShortNameBank": {
          "type": "string",
          "readOnly": true,
          "maxLength": 60
        },
        "Spot": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "Strait": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        }
      }
    },
    "Contract": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "ContractorCompany",
        "ContractSpecies",
        "Coperation",
        "CorperationRole",
        "Status",
        "BeginningOfTerm",
        "Budget",
        "ContractName",
        "ContractReferenceNumber",
        "CurrentGrossContractvaluepa",
        "CurrentNetContractvaluepa",
        "EndOfTerm",
        "ImportPurchaseOrdersfromefas",
        "RequiresWrittenForm",
        "SignedOn",
        "StoppDunningNotice",
        "SumAmountGross",
        "SupplementNumber",
        "TenantBalance"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Orders": {
          "$ref": "#/definitions/Orders"
        },
        "AssetContracts": {
          "$ref": "#/definitions/AssetContracts"
        },
        "OutgoingInvoices": {
          "$ref": "#/definitions/OutgoingInvoices"
        },
        "AllocationOfAccountBookings": {
          "$ref": "#/definitions/AllocationOfAccountBookings"
        },
        "IncomingInvoices": {
          "$ref": "#/definitions/IncomingInvoices"
        },
        "ContractServices": {
          "$ref": "#/definitions/ContractServices"
        },
        "ContractTasks": {
          "$ref": "#/definitions/ContractTasks"
        },
        "AssignmentContractsToPlacesOfDispositions": {
          "$ref": "#/definitions/AssignmentContractsToPlacesOfDispositions"
        },
        "ContractValues": {
          "$ref": "#/definitions/ContractValues"
        },
        "BankBk": {
          "type": "integer",
          "format": "int32"
        },
        "Building": {
          "$ref": "#/definitions/Building"
        },
        "Contractor": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/CompanyAddress"
            }
          ]
        },
        "ContractorCompany": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "ContractSpecies": {
          "$ref": "#/definitions/ContractKind"
        },
        "ContractType": {
          "$ref": "#/definitions/ContractType"
        },
        "Coperation": {
          "$ref": "#/definitions/Corporation"
        },
        "CorperationRole": {
          "$ref": "#/definitions/ContractRole"
        },
        "CostCenter": {
          "$ref": "#/definitions/CostCenter"
        },
        "Customer": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/CompanyAddress"
            }
          ]
        },
        "KebBank": {
          "$ref": "#/definitions/OwnBankAccount"
        },
        "PaymentTarget": {
          "$ref": "#/definitions/PaymentDueDate"
        },
        "PlaceOfOriginal": {
          "$ref": "#/definitions/ContractDistributionList"
        },
        "Prolongation": {
          "type": "integer",
          "format": "int32"
        },
        "Resignation": {
          "type": "integer",
          "format": "int32"
        },
        "ResubmissionReason": {
          "$ref": "#/definitions/ReasonsForResubmission"
        },
        "Site": {
          "$ref": "#/definitions/Site"
        },
        "SiteStructureLevel2": {
          "$ref": "#/definitions/PortfolioLevel3"
        },
        "SiteStructureLevel3": {
          "$ref": "#/definitions/PortfolioLevel2"
        },
        "Status": {
          "$ref": "#/definitions/ContractState"
        },
        "Term": {
          "type": "integer",
          "format": "int32"
        },
        "Ticket": {
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowTicket"
            }
          ]
        },
        "Amount": {
          "type": "number",
          "format": "decimal"
        },
        "BatchNumber": {
          "type": "string",
          "maxLength": 50
        },
        "BeginningOfTerm": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "Budget": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "CancelationPeriodAmount": {
          "type": "number",
          "format": "decimal"
        },
        "CancelledOn": {
          "type": "string",
          "format": "date-time"
        },
        "CaptureDate": {
          "type": "string",
          "format": "date-time"
        },
        "CapturingPerson": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "ChangingPerson": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "ConfirmationDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "ConfirmationDateAdmin": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "ConfirmedByPerson": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "ContractName": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ContractReferenceNumber": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "CurrentGrossContractvaluepa": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "CurrentNetContractvaluepa": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "DeleteDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "Description": {
          "type": "string",
          "maxLength": 4000
        },
        "EfasContractNumber": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "EndOfTerm": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "ExpirationOfPeriodofnotice": {
          "type": "string",
          "format": "date-time"
        },
        "ExtendedUntil": {
          "type": "string",
          "format": "date-time"
        },
        "ExtensionAmount": {
          "type": "number",
          "format": "decimal"
        },
        "ExternalContractOwner": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50
        },
        "ExternalCreateDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "FinalInstalment": {
          "type": "number",
          "format": "decimal"
        },
        "ImportDate": {
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "ImportPurchaseOrdersfromefas": {
          "type": "boolean"
        },
        "LastChange": {
          "type": "string",
          "format": "date-time"
        },
        "LowestAmountForpartialaccounting": {
          "type": "number",
          "format": "decimal"
        },
        "RequiresWrittenForm": {
          "type": "boolean"
        },
        "Resubmission": {
          "type": "string",
          "format": "date-time"
        },
        "ResubmissionInWeeks": {
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "SearchPatternIfPaidByBankTransfer": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "SignedOn": {
          "type": "string",
          "format": "date-time",
          "minLength": 1
        },
        "StoppDunningNotice": {
          "type": "boolean",
          "readOnly": true
        },
        "SumAmountGross": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "SupplementNumber": {
          "type": "string",
          "readOnly": true,
          "maxLength": 3,
          "minLength": 1
        },
        "TenantBalance": {
          "type": "boolean"
        }
      }
    },
    "AssetContracts": {
      "type": "object",
      "additionalProperties": false
    },
    "ContractServices": {
      "type": "object",
      "additionalProperties": false
    },
    "ContractTasks": {
      "type": "object",
      "additionalProperties": false
    },
    "AssignmentContractsToPlacesOfDispositions": {
      "type": "object",
      "additionalProperties": false
    },
    "ContractValues": {
      "type": "object",
      "additionalProperties": false
    },
    "ContractType": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Barcode": {
          "type": "string",
          "maxLength": 10
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "ContractRole": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractRoleBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractRoleBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContractDistributionList": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractDistributionListBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractDistributionListBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "LocationOfDistributor"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Contracts": {
          "$ref": "#/definitions/Contracts"
        },
        "AssignmentContractsToPlacesOfDispositions": {
          "$ref": "#/definitions/AssignmentContractsToPlacesOfDispositions"
        },
        "LocationOfDistributor": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Sorting": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ReasonsForResubmission": {
      "allOf": [
        {
          "$ref": "#/definitions/ReasonsForResubmissionBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ReasonsForResubmissionBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "ContractState": {
      "allOf": [
        {
          "$ref": "#/definitions/ContractStateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ContractStateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "Sorting": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ConsumerPriceIndex": {
      "allOf": [
        {
          "$ref": "#/definitions/ConsumerPriceIndexBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "ConsumerPriceIndexBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "BaseYear",
        "IndexValue",
        "MonthyyyyyMm"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BaseYear": {
          "type": "integer",
          "format": "int32"
        },
        "IndexValue": {
          "type": "number",
          "format": "decimal"
        },
        "MonthyyyyyMm": {
          "type": "string",
          "maxLength": 7,
          "minLength": 1
        }
      }
    },
    "TenancyAgreementContractType": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementContractTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementContractTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "TenancyAgreementState": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementStateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementStateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "State"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "State": {
          "type": "string",
          "readOnly": true,
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "TenancyAgreementType": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Cipher",
        "LeaseType"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Cipher": {
          "type": "string",
          "maxLength": 5,
          "minLength": 1
        },
        "LeaseType": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        }
      }
    },
    "Tenant": {
      "allOf": [
        {
          "$ref": "#/definitions/TenantBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenantBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Debitor",
        "CompetitionProtection",
        "NameDescription",
        "RepairsByLandlordbeforemovingin"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "TenancyAgreements": {
          "$ref": "#/definitions/TenancyAgreements"
        },
        "Debitor": {
          "$ref": "#/definitions/Debitor"
        },
        "AuthorizationForAdvertisingmeasures": {
          "type": "string",
          "maxLength": 255
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyProfile": {
          "type": "string",
          "maxLength": 8000
        },
        "CompetitionProtection": {
          "type": "boolean"
        },
        "DecorativeRepairs": {
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "DunningCosts": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "Hatching": {
          "type": "integer",
          "format": "int32"
        },
        "NameDescription": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pledges": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "RepairsByLandlordbeforemovingin": {
          "type": "boolean",
          "readOnly": true
        },
        "RepairsRemark": {
          "type": "string",
          "readOnly": true,
          "maxLength": 255
        },
        "SecurityAmount": {
          "type": "number",
          "readOnly": true,
          "format": "decimal"
        },
        "SmallMaintenance": {
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "Steps": {
          "type": "string",
          "readOnly": true,
          "maxLength": 100
        },
        "TenantSince": {
          "type": "string",
          "format": "date-time"
        },
        "Tint": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TenancyAgreementIndex": {
      "allOf": [
        {
          "$ref": "#/definitions/TenancyAgreementIndexBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "TenancyAgreementIndexBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RoomGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/RoomGroupBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "RoomGroupBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Floor",
        "NameusageDescription",
        "RoomGroupNumber"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Rooms": {
          "$ref": "#/definitions/Rooms"
        },
        "Floor": {
          "$ref": "#/definitions/Floor"
        },
        "Code": {
          "type": "string",
          "maxLength": 50
        },
        "NameusageDescription": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "RoomGroupNumber": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "SecondaryUsageState": {
      "allOf": [
        {
          "$ref": "#/definitions/SecondaryUsageStateBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SecondaryUsageStateBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SpaceAllocation": {
      "allOf": [
        {
          "$ref": "#/definitions/SpaceAllocationBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SpaceAllocationBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "SpaceType": {
      "allOf": [
        {
          "$ref": "#/definitions/SpaceTypeBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "SpaceTypeBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WallCovering": {
      "allOf": [
        {
          "$ref": "#/definitions/WallCoveringBase"
        },
        {
          "type": "object",
          "additionalProperties": false
        }
      ]
    },
    "WallCoveringBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Id",
        "Code",
        "Name"
      ],
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "BackgroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "ForegroundColor": {
          "type": "integer",
          "format": "int32"
        },
        "Name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "Pattern": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}